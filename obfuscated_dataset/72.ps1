# [*] Obfuscating 79 Command tokens.




function Get-AuthToken {



[cmdletbinding()]

param
(
    [Parameter(Mandatory=$true)]
    $User
)

$userUpn = &('N'+'ew'+'-Object') "System.Net.Mail.MailAddress" -ArgumentList $User

$tenant = $userUpn.Host

&('Write-H'+'o'+'st') "Checking for AzureAD module..."

    $AadModule = &('G'+'e'+'t-Modu'+'le') -Name "AzureAD" -ListAvailable

    if ($AadModule -eq $null) {

        &('Write'+'-'+'Host') "AzureAD PowerShell module not found, looking for AzureADPreview"
        $AadModule = &('Get'+'-M'+'odu'+'le') -Name "AzureADPreview" -ListAvailable

    }

    if ($AadModule -eq $null) {
        &('wri'+'te'+'-ho'+'st')
        &('w'+'rite-ho'+'s'+'t') "AzureAD Powershell module not installed..." -f Red
        &('write'+'-'+'host') "Install by running 'Install-Module AzureAD' or 'Install-Module AzureADPreview' from an elevated PowerShell prompt" -f Yellow
        &('w'+'rit'+'e-hos'+'t') "Script can't continue..." -f Red
        &('write-'+'h'+'ost')
        exit
    }




    if($AadModule.count -gt 1){

        $Latest_Version = ($AadModule | &('s'+'e'+'lect') version | &('Sort-'+'O'+'b'+'ject'))[-1]

        $aadModule = $AadModule | &('?') { $_.version -eq $Latest_Version.version }



            if($AadModule.count -gt 1){

            $aadModule = $AadModule | &('s'+'el'+'ect') -Unique

            }

        $adal = &('Jo'+'i'+'n-Path') $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.dll"
        $adalforms = &('Joi'+'n-Pa'+'th') $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.Platform.dll"

    }

    else {

        $adal = &('J'+'oin-P'+'ath') $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.dll"
  <REDACTED: ObfuscatedLength = 13686>M0NEKm/U8EqFwEkO3/EAT4grgl0nucwlk9pcpTTJ4VPA4g/Rb3yIRhhp507e9nTQmZ1OS5RO4sS7nIRPEeHXCHdkw9ZEW2yVE5oIS7peD58Avs7CN+PVCmHh21oOqBdjDzIs+FldPJ74TFESUSJEfVzy9U/dhu+AuOT6eBp6gGKyXEx8euO450ZE4CMfstMFT44broWw/itkYErWXRx+fFArt9Ca9os78TFed0LVIUsmIHrwbwaw3BEOnOk94qVpQ6Ka2HjxewJnfyd6jUtGDQLdWlzmYNYLeKbbGOucJsNabCq1Yub0o92rtR+i30V2dapxYVEePXcOjeCKPnYyit7BtKeNlZqHbr+gt7i+AChWA9RsRs03pxTQc67ouWpxyESvjK5Vs3DVSy3IpkxPm5X+wZoBi+MFHWW69/w8FRhc7VBe6HAhMB2b8Q0XqDzTNZtXUMnKMjwKVaCrB/CSUL7WSx/HsdJC86lFGXwnioTeOMPjV+szlFvrZLA5VMVK4y+41l4e1xfx7Z88o4hkilRUH/qKqwNVlgDgpvYCpH3XwAy5eMCRnezIUxffVXoDql2rTHFDO+pjWnTWzAfrYXn6BFECblUpWGrvPZvBipETjS5ydM7tdXpH41ZCEbBNy/+wFZu71QO2t9pgT+iZEf657Q1vpN94PQNDxUHeKR103LV9nPVOtDikcNKO+2naCw7yKBhOe9Hm79pe8C4/CfC2wDjXnqC94kEeBU3WwN7dt/2UScXas7zDl5GpkY+M8WKv2J7fd4Ib2rGTk+jsC2cleEM7jI9veF7B0MBJrsZqfKd/81q9pR2NZfwJK2JzsmIT1Ns8jUH0UusQBpU8d2JzsHiXg1zXGLqxfitUNTDT/nUUeqDBp2HZVr+Ocqi/Ty3Rf4Jn82xxfSNtAAAAAElFTkSuQmCC"
  },
  "notes": "",
  "owner": "Microsoft",
  "privacyInformationUrl": "",
  "publisher": "Microsoft"
}

"@



&('write-ho'+'s'+'t') "Publishing" ($JSON | &('Co'+'nvertF'+'rom'+'-Json')).displayName -ForegroundColor Yellow

$Create_Application = &('A'+'dd-M'+'D'+'MAp'+'plic'+'ation') -JSON $JSON

&('Wri'+'te'+'-Host') "Application created as $($Create_Application.displayName)/$($create_Application.id)"

$ApplicationId = $Create_Application.id

$Assign_Application = &('Add-A'+'pp'+'lica'+'tionAss'+'ignm'+'ent') -ApplicationId $ApplicationId -TargetGroupId $TargetGroupId -InstallIntent "required"
&('Write'+'-Hos'+'t') "Assigned '$AADGroup' to $($Create_Application.displayName)/$($Create_Application.id) with" $Assign_Application.InstallIntent "install Intent"

&('Wri'+'t'+'e-Host')


# WARNING: This command exceeds the cmd.exe maximum length of 8190.Its length is 13686 characters.