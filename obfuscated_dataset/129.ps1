# WARNING: This command contains an unbalanced number of double quotes (349). Try applying STRING or ENCODING obfuscation options first to encode the double quotes.


function Get-AuthToken {



[cmdletbinding()]

param
(
    [Parameter(Mandatory=$true)]
    $User
)

$userUpn = New-Object \"System.Net.Mail.MailAddress\" -ArgumentList $User

$tenant = $userUpn.Host

Write-Host \"Checking for AzureAD module...\"

    $AadModule = Get-Module -Name \"AzureAD\" -ListAvailable

    if ($AadModule -eq $null) {

        Write-Host \"AzureAD PowerShell module not found, looking for AzureADPreview\"
        $AadModule = Get-Module -Name \"AzureADPreview\" -ListAvailable

    }

    if ($AadModule -eq $null) {
        write-host
        write-host \"AzureAD Powershell module not installed...\" -f Red
        write-host \"Install by running 'Install-Module AzureAD' or 'Install-Module AzureADPreview' from an elevated PowerShell prompt\" -f Yellow
        write-host \"Script can't continue...\" -f Red
        write-host
        exit
    }




    if($AadModule.count -gt 1){

        $Latest_Version = ($AadModule ^^^| select version ^^^| Sort-Object)[-1]

        $aadModule = $AadModule ^^^| ? { $_.version -eq $Latest_Version.version }



            if($AadModule.count -gt 1){

            $aadModule = $AadModule ^^^| select -Unique

            }

        $adal = Join-Path $AadModule.ModuleBase \"Microsoft.IdentityModel.Clients.ActiveDirectory.dll\"
        $adalforms = Join-Path $AadModule.ModuleBase \"Microsoft.IdentityModel.Clients.ActiveDirectory.Platform.dll\"

    }

    else {

        $adal = Join-Path $AadModule.ModuleBase \"Microsoft.IdentityModel.Clients.ActiveDirectory.dll\"
        $adalforms = Join-Path $AadModule.ModuleBase \"Microsoft.IdentityModel.Cl<REDACTED: ObfuscatedLength = 13199>reWipeIsEnforced": "P90D",
  "pinRequired": true,
  "maximumPinRetries": 5,
  "simplePinBlocked": true,
  "minimumPinLength": 4,
  "pinCharacterSet": "numeric",
  "allowedDataStorageLocations": [],
  "contactSyncBlocked": true,
  "printBlocked": true,
  "fingerprintBlocked": true,
  "appDataEncryptionType": "afterDeviceRestart",

  "apps": [
    {
        "mobileAppIdentifier": {
        "@odata.type": "
        "packageId": "com.microsoft.office.outlook"
        }
    },
    {
        "mobileAppIdentifier": {
        "@odata.type": "
        "packageId": "com.microsoft.office.excel"
        }
    }

    ]
}

"\"



Write-Host \"Adding App Protection Policies to Intune...\" -ForegroundColor Cyan
Write-Host

Write-Host \"Adding iOS Managed App Policy from JSON...\" -ForegroundColor Yellow
Write-Host \"Creating Policy via Graph\"

$CreateResult = Add-ManagedAppPolicy -Json $iOS
write-host \"Policy created with id\" $CreateResult.id

$MAM_PolicyID = $CreateResult.id

$Assign_Policy = Assign-ManagedAppPolicy -Id $MAM_PolicyID -TargetGroupId $TargetGroupId -OS iOS
Write-Host \"Assigned '$AADGroup' to $($CreateResult.displayName)/$($CreateResult.id)\"

Write-Host

write-host \"Adding Android Managed App Policy from JSON...\" -f Yellow
Write-Host \"Creating Policy via Graph\"

$CreateResult = Add-ManagedAppPolicy -Json $Android
write-host \"Policy created with id\" $CreateResult.id

$MAM_PolicyID = $CreateResult.id

$Assign_Policy = Assign-ManagedAppPolicy -Id $MAM_PolicyID -TargetGroupId $TargetGroupId -OS Android
Write-Host \"Assigned '$AADGroup' to $($CreateResult.displayName)/$($CreateResult.id)\"

Write-Host


# WARNING: This command exceeds the cmd.exe maximum length of 8190. Its length is 13199 characters.