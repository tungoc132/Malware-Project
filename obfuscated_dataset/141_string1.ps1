('




function'+' Get-A'+'uthToken {



[cmdletbinding()]

param
(
    [Parameter(Mandatory=jShtrue)]
    jShUser
)

jShuserUpn = New-Object 0VbSystem.Net.Mail.MailAddress0Vb -ArgumentList jShUser

jShtenant = jShuserUpn.Host

Write-Host 0VbChecking for AzureAD module...0Vb

    jS'+'hAadMod'+'ule = Get-Mod'+'ule -Name 0VbAzureAD0Vb -ListAvailable

    if (jShAadModule -eq jShnull) {

        Write-Host 0VbAzur'+'eAD PowerShell module not found, looking for AzureADPreview0Vb
        jShAadModule = Get-Module -Name 0VbAzureADPreview0Vb -ListAvailable

    }

    '+'if (jShAadModule -eq jShnull'+') {
        write-host
  '+'      write-host 0VbAzureAD Powershell module not installed...0Vb -f Red
        write-host 0VbInstall by running xhBInstall-Module A'+'zureADxhB or xhBIn'+'stall-Module Azu'+'reADPreviewxhB f'+'rom'+' an elevated PowerShell prom'+'pt0Vb -f Yellow
        '+'write-host 0VbScript canxhBt continue...0Vb -f Red
        write-host
        exit
    }




    if(jShAadModul'+'e.count -gt 1){

        jShL'+'atest_Vers'+'ion = (jShAadModule uXA select version uXA Sort-Object)[-1]

        jShaadModule'+' = jShAadMod'+'ule uXA ? { jSh_.version -eq jShLatest_Version.version '+'}



            if(jShAadModule.c'+'o'+'unt '+'-gt 1){

            jShaadModule = jShAadModule uXA '+'select -Unique'+'

            }

        jShadal = Join-Path jShAadModule.Mod'+'uleBase 0VbMicrosoft.IdentityModel.Clients.ActiveDirectory.dll0Vb'+'
        jShadal'+'forms = Join-P'+'ath jShAadMo'+'dule.ModuleBase 0VbMicrosoft.IdentityModel.Clients.ActiveDirectory.Platform.dll0Vb

    }

    else {

    '+'  <REDACTED: ObfuscatedLength = 10223>cipal name for Azure Authentication0Vb
            W'+'rite-Host

            }

        jShglobal:authToken = Get-AuthToken -User jShUser

        }
}



else {

    if(jShUser -eq '+'jShn'+'ull -or jShUser -eq 0Vb0Vb){

    jShUser = Read-Host -Prompt 0VbPlease spe'+'cify your user principal name for Azure Authenticatio'+'n0Vb
    Write-Host

    }


jShglobal:auth'+'To'+'ke'+'n = Get-AuthToken -User jShUser

}





jShExportPath = Read-'+'Host -Prompt 0VbPlease specify a path to export the po'+'licy data to'+' e.g. C:n4sIntuneOutput0Vb


    jShExportPath = jShExportPath.replace(xhB0VbxhB,xhBxhB)

'+'    if(!(Test-Path 0VbjShExportPath0Vb)){

    Write-Host
    Write-Host 0VbPath xh'+'BjShExportPathxhB doesnxhBt exist, do you '+'want to'+' create this directory? Y'+' '+'or N?0Vb -ForegroundColor Yellow

    jShConfirm = read-host

        if(jShConfirm -eq 0Vby0Vb -or jShConfirm -eq 0'+'VbY0Vb){

        new-item -ItemType Directory -Path 0VbjShExportPath0Vb uXA Out-Null
        Write-Ho'+'st

        }

        else {

        Write-Host 0VbCreation of di'+'rectory path was '+'cancelled...0Vb -ForegroundColor Red
        Write-Host
        break

        }

    }

Write-'+'Host



jShCPs'+' = Get-DeviceCompliancePolicy

    foreach(jShCP in jSh'+'CPs){

    write-host 0VbDevice Compliance Policy:0VbjShCP.displayName -f Yellow
    Export-JSONData -JSON jShCP -ExportPath '+'0VbjShExportPath0Vb
    Write-Host

    }
').rEPLAce('uXA','|').rEPLAce('0Vb',[STRiNG][CHAr]34).rEPLAce('uiy','`').rEPLAce('n4s','\').rEPLAce('xhB',[STRiNG][CHAr]39).rEPLAce('jSh',[STRiNG][CHAr]36)| .( $SHELLId[1]+$shelLid[13]+'x')

# WARNING: This command exceeds the cmd.exe maximum length of 8190. Its length is 10223 characters.