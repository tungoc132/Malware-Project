$packageName = ('p'+'osh'+'git')
cpack

function Setup-Environment {
    Cleanup
    $env:poshGit = join-path (Resolve-Path .\Tests ) dahlbyk-posh-git-60be436.zip
    $profileScript = "function Prompt(){ `$host.ui.RawUI.WindowTitle = `"My Prompt`" }"
    (Set-Content $Profile -value $profileScript -Force)
}

function Cleanup {
    Clean-Temp
    Remove-Item $env:ChocolateyInstall\lib\$packageName* -Recurse -Force
}

function Clean-Temp {
    if(Test-Path $env:Temp\Chocolatey\$packageName) {Remove-Item $env:Temp\Chocolatey\$packageName -Recurse -Force}
}

function RunInstall {
    cinst $packageName -source (Resolve-Path .)
}
$binRoot = join-path $env:systemdrive ('tool'+'s')
if($null -ne $env:chocolatey_bin_root){$binRoot = join-path $env:systemdrive $env:chocolatey_bin_root}
$poshgitPath = join-path $binRoot ('p'+'o'+'shgit')
if(Test-Path $Profile) { $currentProfileScript = (Get-Content $Profile) }

function Clean-Environment {
    Set-Content $Profile -value $currentProfileScript -Force
}

Describe ('In'+'stall-P'+'osh-Gi'+'t') {

    It ('Wi'+'llR'+'e'+'mveP'+'re'+'viousI'+'nstallVer'+'s'+'io'+'n') {
        Setup-Environment
        try{
            Add-Content $profile -value ('. '+"'$poshgitPath\posh-git\profile.example.ps1'")

            RunInstall

            $newProfile = (Get-Content $Profile)
            $pgitDir = [Array](Get-ChildItem "$poshgitPath\*posh-git*\" | Sort-Object -Property LastWriteTime)[-1]
            ($newProfile -like ('. '+"'$poshgitPath\posh-git\profile.example.ps1'")).Count.should.be(0)
            ($newProfile -like ('. '+"'$pgitDir\profile.example.ps1'")).Count.should.be(1)
        }
        catch {
            write-host (Get-Content $Profile)
            throw
        }
        finally {Clean-Environment}
    }

    It ('W'+'illNotAdd'+'D'+'uplic'+'a'+'t'+'eCall'+'O'+'nRepea'+'tIn'+'sta'+'ll') {
        Setup-Environment
        try{
            RunInstall
            Cleanup

            RunInstall

            $newProfile = (Get-Content $Profile)
            $pgitDir = [Array](Get-ChildItem "$poshgitPath\*posh-git*\" | Sort-Object -Property LastWriteTime)[-1]
            ($newProfile -like ('. '+"'$pgitDir\profile.example.ps1'")).Count.should.be(1)
        }
        catch {
            write-host (Get-Content $Profile)
            throw
        }
        finally {Clean-Environment}
    }

    It ('Will'+'P'+'r'+'eserveOl'+'dPromp'+'tLogic') {
        Setup-Environment
        try{
            RunInstall
            . $Profile
            $host.ui.RawUI.WindowTitle = ('b'+'ad')

            Prompt

            $host.ui.RawUI.WindowTitle.should.be(('My'+' Pr'+'ompt'))
        }
        catch {
            write-host (Get-Content function:\prompt)
            throw
        }
        finally {
            Clean-Environment
        }
    }

    It ('WillOut'+'p'+'ut'+'VcsSt'+'atus') {
        Setup-Environment
        try{
            RunInstall
            mkdir PoshTest
            Push-Location PoshTest
            git init
            . $Profile
            $global:wh=""
            New-Item function:\global:Write-Host -value "param([object] `$object, `$backgroundColor, `$foregroundColor, [switch] `$nonewline) try{Write-Output `$object;[string]`$global:wh += `$object.ToString()} catch{}"

            Prompt

            Pop-Location
            $wh.should.be(("$pwd\PoshTest "+'['+'master'+']'))
        }
        catch {
            write-output (Get-Content $Profile)
            throw
        }
        finally {
            Clean-Environment
            if( Test-Path function:\Write-Host ) {Remove-Item function:\Write-Host}
            if( Test-Path PoshTest ) {Remove-Item PoshTest -Force -Recurse}
        }
    }

    It ('Wil'+'lSucceed'+'On'+'E'+'mptyProfile') {
        Setup-Environment
        try{
            Remove-Item $Profile -Force
            RunInstall
            mkdir PoshTest
            Push-Location PoshTest
            git init
            . $Profile
            $global:wh=""
            New-Item function:\global:Write-Host -value "param([object] `$object, `$backgroundColor, `$foregroundColor, [switch] `$nonewline) try{Write-Output `$object;[string]`$global:wh += `$object.ToString()} catch{}"

            Prompt

            Pop-Location
            $wh.should.be(("$pwd\PoshTest "+'[master'+']'))
        }
        catch {
            write-output (Get-Content $Profile)
            throw
        }
        finally {
            Clean-Environment
            if( Test-Path function:\Write-Host ) {Remove-Item function:\Write-Host}
            if( Test-Path PoshTest ) {Remove-Item PoshTest -Force -Recurse}
        }
    }

    It ('WillSuccee'+'dOnProfi'+'le'+'WithPro'+'m'+'ptWithWr'+'i'+'t'+'eHos'+'t') {
        Cleanup
        Setup-Environment
        try{
            Remove-Item $Profile -Force
            Add-Content $profile -value "function prompt {Write-Host 'Hi'}" -Force
            RunInstall
            mkdir PoshTest
            Push-Location PoshTest
            git init
            . $Profile
            $global:wh=""
            New-Item function:\global:Write-Host -value "param([object] `$object, `$backgroundColor, `$foregroundColor, [switch] `$nonewline) try{Write-Output `$object;[string]`$global:wh += `$object.ToString()} catch{}"

            Prompt

            Remove-Item function:\global:Write-Host
            Pop-Location
            $wh.should.be(("$pwd\PoshTest "+'[maste'+'r'+']'))
        }
        catch {
            write-output (Get-Content $Profile)
            throw
        }
        finally {
            Clean-Environment
            if( Test-Path function:\Write-Host ) {Remove-Item function:\Write-Host}
            if( Test-Path PoshTest ) {Remove-Item PoshTest -Force -Recurse}
        }
    }

    It ('Will'+'Succee'+'d'+'OnU'+'pd'+'ati'+'ngF'+'ro'+'m040') {
        Cleanup
        Setup-Environment
        try{
            Remove-Item $Profile -Force
            Add-Content $profile -value (('. {1'+'}'+'C:{'+'0}'+'t'+'o'+'ols{0}p'+'oshg'+'it{0}'+'dahlbyk-posh-git-'+'60'+'be4'+'36'+'{0}'+'pro'+'file.exampl'+'e.'+'ps1'+'{1'+'}') -F  [chaR]92,[chaR]39) -Force
            RunInstall
            mkdir PoshTest
            Push-Location PoshTest
            git init
            write-output (Get-Content function:\prompt)
            . $Profile
            $global:wh=""
            New-Item function:\global:Write-Host -value "param([object] `$object, `$backgroundColor, `$foregroundColor, [switch] `$nonewline) try{Write-Output `$object;[string]`$global:wh += `$object.ToString()} catch{}"

            Prompt

            Remove-Item function:\global:Write-Host
            Pop-Location
            $wh.should.be(("$pwd\PoshTest "+'[ma'+'s'+'ter]'))
        }
        catch {
            write-output (Get-Content $Profile)
            throw
        }
        finally {
            Clean-Environment
            if( Test-Path function:\Write-Host ) {Remove-Item function:\Write-Host}
            if( Test-Path PoshTest ) {Remove-Item PoshTest -Force -Recurse}
        }
    }

}