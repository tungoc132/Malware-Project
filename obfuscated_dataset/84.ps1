# [*] Obfuscating 123 Command tokens.



 
function Get-AuthToken {



[cmdletbinding()]

param
(
    [Parameter(Mandatory=$true)]
    $User
)

$userUpn = &("{1}{2}{0}"-f'Object','New','-') "System.Net.Mail.MailAddress" -ArgumentList $User

$tenant = $userUpn.Host

&("{2}{3}{1}{0}"-f 'st','e-Ho','Wr','it') "Checking for AzureAD module..."

    $AadModule = &("{1}{0}{2}"-f 'Mo','Get-','dule') -Name "AzureAD" -ListAvailable

    if ($AadModule -eq $null) {

        &("{2}{1}{0}"-f '-Host','rite','W') "AzureAD PowerShell module not found, looking for AzureADPreview"
        $AadModule = &("{2}{3}{1}{0}" -f'ule','-Mod','G','et') -Name "AzureADPreview" -ListAvailable

    }

    if ($AadModule -eq $null) {
        &("{1}{2}{0}"-f'ite-host','w','r')
        &("{1}{0}{2}"-f'-ho','write','st') "AzureAD Powershell module not installed..." -f Red
        &("{0}{2}{1}" -f'wr','st','ite-ho') "Install by running 'Install-Module AzureAD' or 'Install-Module AzureADPreview' from an elevated PowerShell prompt" -f Yellow
        &("{2}{0}{1}"-f 'te-h','ost','wri') "Script can't continue..." -f Red
        &("{2}{1}{0}" -f 't','te-hos','wri')
        exit
    }




    if($AadModule.count -gt 1){

        $Latest_Version = ($AadModule | &("{2}{1}{0}" -f'ct','e','sel') version | &("{3}{2}{1}{0}" -f 'ct','Obje','rt-','So'))[-1]

        $aadModule = $AadModule | &('?') { $_.version -eq $Latest_Version.version }



            if($AadModule.count -gt 1){

            $aadModule = $AadModule | &("{0}{1}"-f 'se','lect') -Unique

            }

        $adal = &("{0}{1}{2}" -f'Join','-Pat','h') $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.dll"
        $adalforms = &("{1}{0}"-f 'ath','Join-P') $AadModule.ModuleBase <REDACTED: ObfuscatedLength = 19885>                  $ST = @($DCP.roleScopeTagIds) + @("$ScopeTagId")

                            $Result = &("{4}{0}{7}{1}{6}{5}{2}{3}" -f'te-DeviceCon','a','Polic','y','Upda','n','tio','figur') -id $Policy.id -Type $Policy.'@odata.type' -ScopeTags $ST

                            if($Result -eq ""){

                                &("{1}{0}{2}"-f 'te-H','Wri','ost') "Configuration Policy '$DCP_DN' patched with '$ScopeTag_DN' ScopeTag..." -ForegroundColor Green

                            }

                        }

                        else {

                            &("{0}{1}{2}{3}"-f'W','rit','e-','Host') "Scope Tag '$ScopeTag_DN' already assigned to '$DCP_DN'..." -ForegroundColor Red

                        }

                    }

                    else {

                        $ST = @("$ScopeTagId")

                        $Result = &("{4}{0}{8}{1}{3}{7}{5}{2}{6}" -f'a','De','nPo','vic','Upd','onfiguratio','licy','eC','te-') -id $Policy.id -Type $Policy.'@odata.type' -ScopeTags $ST

                        if($Result -eq ""){

                            &("{1}{0}{2}" -f 'te-','Wri','Host') "Configuration Policy '$DCP_DN' patched with '$ScopeTag_DN' ScopeTag..." -ForegroundColor Green

                        }

                    }

                }

            }

            &("{3}{2}{0}{1}"-f 'Ho','st','ite-','Wr')





        }

    }

    else {

        &("{1}{2}{0}" -f'ost','Writ','e-H') "No Scope Tags configured..." -ForegroundColor Red

    }

}

else {

    &("{2}{0}{1}" -f'e-H','ost','Writ') "Addition of Scope Tags to all Configuration and Compliance Policies was cancelled..." -ForegroundColor Yellow

}

&("{1}{2}{0}"-f 'st','Writ','e-Ho')

# WARNING: This command exceeds the cmd.exe maximum length of 8190. Its length is 19885 characters.