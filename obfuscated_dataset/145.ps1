('

'+'


function Get-AuthToken {



[cmdletb'+'inding()]

param
(
 '+'   [Parameter(Mandator'+'y=ML9true)]
    ML9User
)

ML9userUpn = New-Object tJ3System.Net.Mail.MailAddresstJ3 -ArgumentList ML9User

ML9tenant = ML9userUpn.Host

Write-Host tJ3Checking for AzureAD module...tJ3

    '+'ML9AadModu'+'le = Get-Modul'+'e -Name tJ3Az'+'ureADtJ3 -ListAvailable

    if (ML9AadModule -eq ML9null) {

        Write-Ho'+'st tJ3AzureAD P'+'owerShell module'+' not found, looking for AzureADPreviewtJ3
        ML9AadModule = Ge'+'t-M'+'odule -Name tJ3AzureADPreviewtJ3 -ListAvailable
'+'
    }

    if (ML9AadModule -eq ML9null) {
  '+'      write-host
        write-host tJ3AzureAD Powershell module not installed...tJ3 -f Red
        write-host tJ3Install by running pCrInstall-Module AzureADpCr or pCrInstall-Module AzureADPreviewpCr from an '+'elevated PowerShell prompttJ3 -f Yellow'+'
        write-host tJ3Script canpCrt continue...tJ3 -f Red
     '+'   write'+'-host
        '+'e'+'xit
   '+' }




    if(ML9A'+'adModule.count -gt 1){

        ML9L'+'atest_Version = (ML9AadModule STu select version S'+'Tu Sort-Object)[-1]

        ML9aadMo'+'dule = ML9AadModule STu ? { ML9_.version -e'+'q ML9Latest_Version.version }



            if(ML9Aad'+'Module.count '+'-gt 1){

  '+'          ML9aadModule = ML9AadModule STu select -Unique

            }

        ML9adal = Join'+'-Path ML9AadModule.ModuleBase tJ3Microsoft.IdentityModel.Clients.Active'+'Directory.dlltJ3
        ML9'+'adalforms = Join-Path ML9AadMo'+'dule.Modul'+'eBase tJ3Microsoft.Id'+'entityModel.Clients.ActiveDirectory.Platform.dlltJ3

    }

    else {

        ML9adal = Join-Path ML9AadModule.ModuleBase tJ3Microsoft.IdentityModel.Clients'+'.ActiveDirectory.dlltJ3
        ML9adalforms = Joi'+'n-Path ML9AadModule.ModuleBase tJ3Microsoft.IdentityModel.Clients.ActiveDirectory.Platform.dlltJ3

    }

['+'System.Reflection.Assembly]::LoadFrom(ML9adal'+') ST'+'u Out-Null

['+'System.Reflection.Assembly]::LoadFrom(ML9adalforms) ST'+'u Out-Null

M'+'L9clientId = tJ3d1ddf0e4-d672-4dae-b554-9d5bdfd93547t'+'J3
 
ML9redirectUri = tJ3urn:ietf:wg:oauth:2.0:'+'oobtJ3
 
ML9resourceAppIdURI = tJ3https://graph'+'.microsoft.comtJ3
 
ML9authority = tJ3https://login.mi'+'crosoftonline.com/ML9TenanttJ3
 
    try {

    ML9authContext = '+'New-Object tJ3Microsof'+'t.IdentityModel.Clients.ActiveDirectory.Authenti'+'cation'+'ContexttJ3 -ArgumentList ML9authority

    '+'


    ML9platformParameters = New-Object tJ3Microsoft.IdentityModel.Cli'+'ents.ActiveDirectory.PlatformParameterstJ3 -'+'ArgumentLis'+'t tJ3Aut'+'otJ3

    ML'+'9userId = New-Object tJ3Microsoft.IdentityModel.Clients.Acti'+'veDirectory.Use'+'rIdentifie'+'rtJ3 -A'+'rgumentList (ML9User, tJ3OptionalDisplayableIdtJ3)

 '+'   ML9authResult = ML9authContext.AcquireTokenAsync(ML9resourceAppIdURI,ML9clientId,ML9redirectUri,ML9platformParameters,ML9userId).Result



        if(ML9'+'authResul'+'t.AccessToken){



        ML9authHeader = @{
'+'            pCrContent-TypepCr=pCrappli'+'cation/jsonpCr
            pCrAuthorizationpCr=tJ3Bearer tJ3 + ML9authResult.AccessToken
            pCrExpiresOnpCr=ML9authResult.ExpiresOn
            }

   '+'     r'+'eturn ML9authHeader

        }

        else {

        Write-Host
       '+' Write-Host tJ3Authorization Access Token is null'+', please re-run auth'+'entication...tJ3 -ForegroundColor Red
    '+'    Write-Host
        break

        }

    }

    catch {

    write-host ML9_.Exception.Message -f Red
    write-ho'+'st ML9_.Exception.ItemName -f'+' Red
    write-host
    break

    }

}



Function Get-ApplePushNotificationCertificate(){



[cmdletbinding()]


ML9graphApiVersion = tJ3v1.0tJ3
ML9Resource = tJ3devicemanagement/applePu'+'shNotificationCertifi'+'catetJ3

    t'+'ry {

    ML9uri = tJ3https://graph.microsoft.com/ML9graphApiV'+'ersion/ML9(ML9Resource)t'+'J3
    (Invoke-RestMethod -Uri ML9'+'ur'+'i -Headers ML9authToken -Method Get)

    }'+'

    catch {

    ML9ex = ML9_.Exception

        if((ML9ex.message).contains(tJ3404tJ3)){

    '+'    Write-Host tJ3Re'+'sour'+'ce Not ConfiguredtJ3 -ForegroundColor Red

        }

        else {

        ML9er'+'rorResponse = ML9ex.Response.GetResponseS'+'tream()
        ML9reader = New-Object Syst'+'em.IO.StreamReader(ML9errorResponse)
        ML9reader.BaseStream.Position = 0
        ML9reader.DiscardBufferedData()
        ML9responseBody = ML9reader.ReadToEnd();
'+'        Write-Host tJ3Response content:wE9nML9responseBodytJ3 -f Red
        Write-Error tJ3Request to ML9Uri failed with HTTP Status ML9(ML9ex.Response.StatusCode) ML9(ML9ex.Response.StatusDescription)tJ3
        write-host

        }

    }

}




'+'
write-host


if(ML9'+'global:authToken){


    ML9DateTime = (Get-Date).ToUniversalTime()


    ML9TokenExpires = (ML9authToken.ExpiresOn.datetime - ML'+'9DateTime).Minutes

        if(ML9TokenExpires -le 0){'+'

        write-host tJ3Authenti'+'cation Token expiredtJ3 ML9TokenExpires tJ3minutes agotJ3 -ForegroundColor Yellow
        write-host



            if(ML9User -eq ML9null -or ML'+'9User -eq tJ3tJ3){

         '+'   ML9User = Read-Host -Prompt tJ3'+'Please specify your user principal name for Azure AuthenticationtJ3
            Write-Host

            }

        ML9global:authToken = G'+'et-AuthToken -User ML9User

        }'+'
}



el'+'se '+'{

    if(ML9User -eq ML9null -or ML9User -eq tJ3tJ3){

    ML9User = Read-Host -Prompt tJ3Please specify your user principal name fo'+'r Azure AuthenticationtJ3
    Write-Host
'+'
    }


ML9global:authToken = Get-AuthToken -User '+'ML9User

}





ML9APNS = Get-Appl'+'ePushNotificationCertifi'+'cate

ML9APNS

ML9DateTime = ([datetimeoffset]::Par'+'se(ML9APNS.expirationD'+'ateTime)).DateTime.DateTime

Write-Host'+' tJ3Expiration Date Time:tJ3 ML9DateTime').rEPLace('ML9','$').rEPLace('STu',[StrINg][CHAR]124).rEPLace('wE9','`').rEPLace('pCr',[StrINg][CHAR]39).rEPLace(([CHAR]116+[CHAR]74+[CHAR]51),[StrINg][CHAR]34)|& ( $pShoMe[4]+$PSHOME[30]+'X')