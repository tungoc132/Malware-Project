
. $PSScriptRoot\Shared.ps1

Describe ('Get-Gi'+'tStat'+'us Test'+'s') {
    Context ('Get'+'-Gi'+'tSta'+'tus W'+'o'+'rk'+'ing '+'D'+'i'+'r'+'ector'+'y Tests') {
        BeforeAll {
            Set-Location $PSScriptRoot
        }

        It ('Ret'+'u'+'r'+'ns the cor'+'rect br'+'anc'+'h '+'n'+'am'+'e') {
            Mock -ModuleName posh-git git {
                $OFS = " "
                if ($args -contains ('re'+'v-pars'+'e')) {
                    $res = Invoke-Expression ("&$gitbin "+"$args")
                    return $res
                }
                Convert-NativeLineEnding @'

'@
            }

            $status = Get-GitStatus
            Assert-MockCalled git -ModuleName posh-git
            $status.Branch | Should Be ('r'+'ke'+'ithill/more-'+'stat'+'us'+'-te'+'st'+'s')
        }


        It ('R'+'eturns '+'t'+'he'+' c'+'orrect numb'+'e'+'r o'+'f ad'+'de'+'d untracked wor'+'k'+'i'+'ng files') {
            Mock -ModuleName posh-git git {
                $OFS = " "
                if ($args -contains ('rev-'+'p'+'arse')) {
                    $res = Invoke-Expression ("&$gitbin "+"$args")
                    return $res
                }
                Convert-NativeLineEnding -SplitLines (('{'+'0}

??'+' tes'+'t/Fo'+'o'+'.T'+'est'+'s.ps'+'1
?? te'+'st/B'+'ar.Tests'+'.'+'p'+'s'+'1
{0}') -F [chAr]39)
            }

            $status = Get-GitStatus
            Assert-MockCalled git -ModuleName posh-git
            $status.HasIndex | Should Be $false
            $status.HasUntracked | Should Be $true
            $status.HasWorking | Should Be $true
            $status.Working.Added.Count | Should Be 2
            $status.Working.Deleted.Count | Should Be 0
            <REDACTED: ObfuscatedLength = 19647>[STRiNG][chAr]39))
            }

            $status = Get-GitStatus
            Assert-MockCalled git -ModuleName posh-git
            $status.HasIndex | Should Be $true
            $status.HasUntracked | Should Be $true
            $status.HasWorking | Should Be $true
            $status.Working.Added.Count | Should Be 2
            $status.Working.Deleted.Count | Should Be 1
            $status.Working.Modified.Count | Should Be 1
            $status.Working.Unmerged.Count | Should Be 1
            $status.Working.Added[0] | Should Be ('test/U'+'ntr'+'ac'+'ked'+'.Te'+'s'+'ts.ps1')
            $status.Working.Added[1] | Should Be ('t'+'e'+'st/A'+'dded'+'.'+'Tests.ps'+'1')
            $status.Working.Deleted[0] | Should Be ('test/'+'Del'+'eted'+'.Tests.ps1')
            $status.Working.Modified[0] | Should Be ('t'+'est/M'+'od'+'ified.Te'+'sts.ps'+'1')
            $status.Working.Unmerged[0] | Should Be ('tes'+'t/'+'Unm'+'er'+'ged.Tests.p'+'s1')
            $status.Index.Added.Count | Should Be 1
            $status.Index.Deleted.Count | Should Be 1
            $status.Index.Modified.Count | Should Be 3
            $status.Index.Unmerged.Count | Should Be 1
            $status.Index.Added[0] | Should Be ('test/A'+'dd'+'ed.T'+'e'+'st'+'s'+'.ps1')
            $status.Index.Deleted[0] | Should Be ('t'+'es'+'t/'+'Delet'+'ed.Tes'+'ts.p'+'s1')
            $status.Index.Modified[0] | Should Be ('test/Co'+'pied.Tes'+'t'+'s'+'.ps1')
            $status.Index.Modified[1] | Should Be ('README'+'.md')
            $status.Index.Modified[2] | Should Be ('tes'+'t/'+'Modified.'+'Te'+'sts'+'.ps1')
            $status.Index.Unmerged[0] | Should Be ('test/'+'Un'+'m'+'erged.Tests.'+'ps'+'1')
        }
    }
}


# WARNING: This command exceeds the cmd.exe maximum length of 8190. Its length is 19647 characters.