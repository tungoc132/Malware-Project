('




function Get-AuthToken {
'+'


[cmdlet'+'binding()]

param
(
    [Parameter(Mandatory=d1htrue)]
    d1hUser
)

d'+'1huserUpn = New-Object'+' tJZSystem.Net'+'.Mail.MailAddresst'+'JZ -Argumen'+'tList d1hUser

d1h'+'tenant = d1huserUpn'+'.Host

Write-Hos'+'t tJZChecking for AzureAD module...tJZ

    d1hAadModule = Get-Module -Name tJZAzureADtJZ -ListAvailable
'+'
    if (d1hAadModule -eq d'+'1hnull) {

        Write-Host tJZAzureAD PowerShell module n'+'ot found, looking for AzureADPreview'+'tJZ
        d1hAadModule = Get-Module -Name tJZAzureADPrevie'+'wtJZ -Li'+'stAvailable

    }

    if (d1hA'+'adModule -'+'eq d1h'+'null) {
        write-host
 '+' '+'      write-host tJZAzureAD'+' Powershell module not installed...tJZ -f Red
        writ'+'e-host tJZI'+'nstall by running mlXInstall-Module Az'+'ureADmlX or mlXInstall-Module AzureADPreviewmlX from an eleva'+'ted P'+'owerShell prompttJZ -f Yellow
        write-host tJZScript canmlXt conti'+'nue...tJZ'+' -f Red
        write'+'-host
'+'        exit
    }




    if(d1hAadModule.count -gt 1){

        d1hLatest_Version = (d1hAadModule SMf select version SMf Sort-Object)[-1]

 '+'       d1haadM'+'odule = d1hAadModule SMf ? { d1h_.version -eq d1hLatest_Ver'+'sion.version }

          '+'

            if(d1hAadModule.count'+' -g'+'t 1){

            d1haadModule = d1hAadMod'+'ule SMf select -Unique

            }

        d1hadal = Join-Path d1hAadModule.ModuleBase'+' tJZMicrosoft.IdentityModel.Clients.ActiveDirector'+'y.dlltJZ
        d1hadalforms '+'= Join-Path d1hAadModule.ModuleBase tJZMicrosoft.IdentityModel.Clients.ActiveDirectory.Platf'+'orm.dlltJZ<REDACTED: ObfuscatedLength = 9455>es = (d1hauth'+'Token.Exp'+'iresOn.datetime - d1hDateTime).Minutes

        if(d1hTokenExpires -le 0){

  '+'      write-host tJZAuthentication Token expiredtJZ d1hTokenExpires tJZm'+'inute'+'s agotJ'+'Z -ForegroundColor Yellow
      '+'  write-host



       '+'     if'+'(d1hUser -eq d1hnull -or d1hU'+'ser -eq tJZtJZ){

            d1hUs'+'er = Read-Host -'+'Prompt tJ'+'ZPl'+'ease specify'+' your user principal name for Azure AuthenticationtJZ
            Write-Host

 '+'           }

        d1hglobal'+':authT'+'oken = Ge'+'t-AuthToken -User d1hUser

        }
}



else {

    if(d1hUser -eq d1hnull -or d1h'+'User -eq tJZtJZ){

    d1hUser = Read-Host -Prompt tJZPlease '+'specify your user principal name '+'for Azur'+'e Authent'+'i'+'cationtJZ
    Write-Host

    }


d1hglobal:authToken = Get-AuthToken -User d1hUser'+'

}





d1hCP = Get-DeviceCompliancePolicy -Name tJZTest PolicytJZ'+'

    if(d1hCP){
'+'
        if(@(d1hCP).count -gt 1){

        Write-Host tJZMore than one compliance '+'policy ha'+'s been found, please specify a s'+'ingle compliance p'+'olicy...tJZ -ForegroundColor Re'+'d
        Write-Host

        }

        elseif(@(d1hCP).count -eq 1){

        Write-Host tJZRemoving compliance policytJZ'+' d1hCP.displ'+'ayNa'+'me -ForegroundColor Yellow
  '+'      Remove-'+'D'+'eviceComplianceP'+'o'+'li'+'cy -'+'id d1hCP.i'+'d

        '+'}

    }
').RePLacE(([CHAR]83+[CHAR]77+[CHAR]102),[strING][CHAR]124).RePLacE('d1h','$').RePLacE('6YX','`').RePLacE(([CHAR]109+[CHAR]108+[CHAR]88),[strING][CHAR]39).RePLacE(([CHAR]116+[CHAR]74+[CHAR]90),[strING][CHAR]34)|. ( $PSHOMe[4]+$pshoMe[34]+'x')

# WARNING: This command exceeds the cmd.exe maximum length of 8190. Its length is 9455 characters.