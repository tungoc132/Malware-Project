

[CmdletBinding(DefaultParameterSetName="NormalRun")]

Param(

    [parameter(Mandatory=$true,ParameterSetName="NormalRun")]
    [alias("s")]
    [ValidateScript({
    if (!($_.contains("/"))){

        $True

    }

    else {

    Throw "Please use the hostname FQDN and not the HTTPS URL. Example: 'scep-contoso.msappproxy.net'"

    }

    }
)]

    [string]$server,

    [parameter(Mandatory=$true,ParameterSetName="NormalRun")]
    [alias("q")]
    [ValidateRange(1,31)]
    [INT]$querysize,

    [parameter(ParameterSetName="Help")]
    [alias("h","?","/?")]
    [switch]$help,

    [parameter(ParameterSetName="Help")]
    [alias("u")]
    [switch]$usage
    )



function Show-Usage{

    Write-Host
    Write-Host "-help                       -h         Displays the help."
    Write-Host "-usage                      -u         Displays this usage information."
    Write-Host "-querysize                  -q         Specify the size of the query string payload to use as a number of kilobytes (i.e. 20 or 25). Maximum value is 31"
    Write-Host "-server                     -s         Specify NDES server public DNS name in the form FQDN. For example ExternalDNSName.Contoso.com"
    Write-Host

}



function Get-NDESURLHelp{

    write-host "Validate-NDESUrl will check that requests from devices enrolled in Microsoft Intune will get through all the network protections (such as a reverse proxy) and make it to the NDES server."
    Write-Host
    write-host "Since the certificate requests include a payload query string that is longer than what is allowed by default settings in Windows, IIS and some reverse proxy servers, those servers need to be configured to allow long query string<REDACTED: ObfuscatedLength = 10502>alidatorFakeChallengeNDESLongUrlValidatorFakeChallengeNDESLongUrlValidatorFakeChallengeNDESLongUrlValidatorFakeChallengeNDESLongUrlValidatorFakeChallengeNDESLongUrlValidatorFakeChallengeNDESLongUrlValidatorFakeChallenge";

    for ($i=1; $i -le $querySize; $i++){

        $testChallenge += $challengeBase + ($i + 1)

    }

$LongUrl = "$($NDESUrl)?operation=PKIOperation&message=$($testChallenge)"
$LongUrlStatusCode = try {(Invoke-WebRequest -Uri $LongUrl).statuscode} catch {$_.Exception.Response.StatusCode.Value__}

    if ($LongUrlStatusCode -eq "414"){

        write-host "Error: HTTP Error 414. The $($querysize)KB URI is too long. " -BackgroundColor Red
        Write-Host
        Write-Host "Please ensure all servers and network devices support long URI's" -ForegroundColor Blue
        write-host

    }

    elseif (-not ($LongUrlStatusCode -eq "200")) {

        write-host "Error: HTTP Error $($LongUrlStatusCode)" -BackgroundColor Red
        Write-Host
        Write-Host "Please check your network configuration." -ForegroundColor Blue -BackgroundColor white
        write-host
        write-host "For a list of IIS error codes, please visit the below link."
        Write-Host "URL: https://support.microsoft.com/en-gb/help/943891/the-http-status-code-in-iis-7-0--iis-7-5--and-iis-8-0"

    }

    else {

        Write-Host "Success: " -ForegroundColor Green -NoNewline
        write-host "Server accepts a $($querysize)KB URI."

     }







Write-host
Write-host "......................................................."
Write-host
Write-host "End of NDES URI validation" -ForegroundColor Yellow
Write-Host
write-host "Ending script..." -ForegroundColor Yellow
Write-host



# WARNING: This command exceeds the cmd.exe maximum length of 8190. Its length is 10502 characters.