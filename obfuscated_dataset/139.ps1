# WARNING: This command contains an unbalanced number of double quotes (277). Try applying STRING or ENCODING obfuscation options first to encode the double quotes.

Executed:
  CLI:  Launcher\Cmd\7
  FULL: Out-PowerShellLauncher -ScriptBlock $ScriptBlock -ExecutionPolicy Bypass 2

Result:





function Get-AuthToken {



[cmdletbinding()]

param
(
    [Parameter(Mandatory=$true)]
    $User
)

$userUpn = New-Object \"System.Net.Mail.MailAddress\" -ArgumentList $User

$tenant = $userUpn.Host

Write-Host \"Checking for AzureAD module...\"

    $AadModule = Get-Module -Name \"AzureAD\" -ListAvailable

    if ($AadModule -eq $null) {

        Write-Host \"AzureAD PowerShell module not found, looking for AzureADPreview\"
        $AadModule = Get-Module -Name \"AzureADPreview\" -ListAvailable

    }

    if ($AadModule -eq $null) {
        write-host
        write-host \"AzureAD Powershell module not installed...\" -f Red
        write-host \"Install by running 'Install-Module AzureAD' or 'Install-Module AzureADPreview' from an elevated PowerShell prompt\" -f Yellow
        write-host \"Script can't continue...\" -f Red
        write-host
        exit
    }




    if($AadModule.count -gt 1){

        $Latest_Version = ($AadModule ^^^| select version ^^^| Sort-Object)[-1]

        $aadModule = $AadModule ^^^| ? { $_.version -eq $Latest_Version.version }



            if($AadModule.count -gt 1){

            $aadModule = $AadModule ^^^| select -Unique

            }

        $adal = Join-Path $AadModule.ModuleBase \"Microsoft.IdentityModel.Clients.ActiveDirectory.dll\"
        $adalforms = Join-Path $AadModule.ModuleBase \"Microsoft.IdentityModel.Clients.ActiveDirectory.Platform.dll\"

    }

    else {

        $adal = Join-Path $AadModule.ModuleBase \"Microsoft.IdentityModel.Clients.ActiveDirectory.dll\"
        $adalforms = Join-Path $AadModule.ModuleBase \"Microsoft.IdentityModel.Cl<REDACTED: ObfuscatedLength = 12256>ecurityBlockJailbrokenDevices": true,
  "deviceThreatProtectionEnabled": true,
  "deviceThreatProtectionRequiredSecurityLevel": "low"
  }

"\"





$AADGroup = Read-Host -Prompt \"Enter the Azure AD Group name where policies will be assigned\"

$TargetGroupId = (get-AADGroup -GroupName \"$AADGroup\").id

    if($TargetGroupId -eq $null -or $TargetGroupId -eq \"\"){

    Write-Host \"AAD Group - '$AADGroup' doesn't exist, please specify a valid AAD Group...\" -ForegroundColor Red
    Write-Host
    exit

    }

Write-Host



Write-Host \"Adding Android Compliance Policy from JSON...\" -ForegroundColor Yellow

$CreateResult_Android = Add-DeviceCompliancePolicy -JSON $JSON_Android

Write-Host \"Compliance Policy created as\" $CreateResult_Android.id
write-host
write-host \"Assigning Compliance Policy to AAD Group '$AADGroup'\" -f Cyan

$Assign_Android = Add-DeviceCompliancePolicyAssignment -CompliancePolicyId $CreateResult_Android.id -TargetGroupId $TargetGroupId

Write-Host \"Assigned '$AADGroup' to $($CreateResult_Android.displayName)/$($CreateResult_Android.id)\"
Write-Host



Write-Host \"Adding iOS Compliance Policy from JSON...\" -ForegroundColor Yellow
Write-Host

$CreateResult_iOS = Add-DeviceCompliancePolicy -JSON $JSON_iOS

Write-Host \"Compliance Policy created as\" $CreateResult_iOS.id
write-host
write-host \"Assigning Compliance Policy to AAD Group '$AADGroup'\" -f Cyan

$Assign_iOS = Add-DeviceCompliancePolicyAssignment -CompliancePolicyId $CreateResult_iOS.id -TargetGroupId $TargetGroupId

Write-Host \"Assigned '$AADGroup' to $($CreateResult_iOS.displayName)/$($CreateResult_iOS.id)\"
Write-Host


# WARNING: This command exceeds the cmd.exe maximum length of 8190. Its length is 12256 characters.