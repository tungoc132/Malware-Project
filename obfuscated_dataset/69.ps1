# [*] Obfuscating 83 Command tokens.




function Get-AuthToken {



[cmdletbinding()]

param
(
    [Parameter(Mandatory=$true)]
    $User
)

$userUpn = N`Ew-Ob`jeCT "System.Net.Mail.MailAddress" -ArgumentList $User

$tenant = $userUpn.Host

WrIT`E`-H`Ost "Checking for AzureAD module..."

    $AadModule = g`ET-MO`DuLe -Name "AzureAD" -ListAvailable

    if ($AadModule -eq $null) {

        w`R`ItE-HoSt "AzureAD PowerShell module not found, looking for AzureADPreview"
        $AadModule = g`eT-mod`ULe -Name "AzureADPreview" -ListAvailable

    }

    if ($AadModule -eq $null) {
        WR`Ite-ho`St
        WriTe-`h`osT "AzureAD Powershell module not installed..." -f Red
        wrIT`e-`Ho`St "Install by running 'Install-Module AzureAD' or 'Install-Module AzureADPreview' from an elevated PowerShell prompt" -f Yellow
        WRiTE`-h`OST "Script can't continue..." -f Red
        wRi`Te-`hO`st
        exit
    }




    if($AadModule.count -gt 1){

        $Latest_Version = ($AadModule | sE`lEcT version | sOrT-O`B`JEct)[-1]

        $aadModule = $AadModule | ? { $_.version -eq $Latest_Version.version }



            if($AadModule.count -gt 1){

            $aadModule = $AadModule | s`ELEcT -Unique

            }

        $adal = Jo`In-Pa`TH $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.dll"
        $adalforms = joi`N-pa`Th $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.Platform.dll"

    }

    else {

        $adal = jOi`N-Pa`Th $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.dll"
        $adalforms = joIN`-`PAtH $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.Platform.dll"

    }

[System.Reflection.Assembly]::LoadFrom($ad<REDACTED: ObfuscatedLength = 13279>euO450ZE4CMfstMFT44broWw/itkYErWXRx+fFArt9Ca9os78TFed0LVIUsmIHrwbwaw3BEOnOk94qVpQ6Ka2HjxewJnfyd6jUtGDQLdWlzmYNYLeKbbGOucJsNabCq1Yub0o92rtR+i30V2dapxYVEePXcOjeCKPnYyit7BtKeNlZqHbr+gt7i+AChWA9RsRs03pxTQc67ouWpxyESvjK5Vs3DVSy3IpkxPm5X+wZoBi+MFHWW69/w8FRhc7VBe6HAhMB2b8Q0XqDzTNZtXUMnKMjwKVaCrB/CSUL7WSx/HsdJC86lFGXwnioTeOMPjV+szlFvrZLA5VMVK4y+41l4e1xfx7Z88o4hkilRUH/qKqwNVlgDgpvYCpH3XwAy5eMCRnezIUxffVXoDql2rTHFDO+pjWnTWzAfrYXn6BFECblUpWGrvPZvBipETjS5ydM7tdXpH41ZCEbBNy/+wFZu71QO2t9pgT+iZEf657Q1vpN94PQNDxUHeKR103LV9nPVOtDikcNKO+2naCw7yKBhOe9Hm79pe8C4/CfC2wDjXnqC94kEeBU3WwN7dt/2UScXas7zDl5GpkY+M8WKv2J7fd4Ib2rGTk+jsC2cleEM7jI9veF7B0MBJrsZqfKd/81q9pR2NZfwJK2JzsmIT1Ns8jUH0UusQBpU8d2JzsHiXg1zXGLqxfitUNTDT/nUUeqDBp2HZVr+Ocqi/Ty3Rf4Jn82xxfSNtAAAAAElFTkSuQmCC"
  },
  "localesToInstall": [
    "en-us"
  ],
  "notes": "",
  "officePlatformArchitecture": "x86",
  "owner": "Microsoft",
  "privacyInformationUrl": "",
  "productIds": [
    "o365ProPlusRetail",
    "projectProRetail",
    "visioProRetail"
  ],
  "publisher": "Microsoft",
  "updateChannel": "firstReleaseCurrent",
  "useSharedComputerActivation": false
}

"@



W`RITe`-hoSt "Publishing" ($JSON | cO`NveR`TF`ROm-JSoN).displayName -ForegroundColor Yellow

$Create_Application = add-MDM`A`pPLi`Cation -JSON $JSON

Writ`E-h`ost "Application created as $($Create_Application.displayName)/$($create_Application.id)"

$ApplicationId = $Create_Application.id

$Assign_Application = ADd-App`L`IcatIONasS`IGN`m`E`Nt -ApplicationId $ApplicationId -TargetGroupId $TargetGroupId -InstallIntent "required"
WriTE`-hO`St "Assigned '$AADGroup' to $($Create_Application.displayName)/$($Create_Application.id) with" $Assign_Application.InstallIntent "install Intent"

WR`itE`-hOST


# WARNING: This command exceeds the cmd.exe maximum length of 8190. Its length is 13279 characters.