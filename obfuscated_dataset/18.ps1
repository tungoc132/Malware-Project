. $PSScriptRoot\Shared.ps1

Describe ('T'+'abE'+'xpa'+'nsion funct'+'io'+'n '+'tes'+'t') {
    BeforeAll {
        if ($PSVersionTable.PSVersion.Major -gt 5) {
            $PSDefaultParameterValues[('i'+'t:s'+'kip')] = $true
        }
    }
    It ('Wind'+'o'+'ws Pow'+'e'+'rShe'+'ll '+'v'+'5 expor'+'ts a Ta'+'bExp'+'ansion'+' fu'+'nc'+'tion') {
        $module.ExportedFunctions.Keys -contains ('T'+'ab'+'Ex'+'pansion') | Should Be $true
    }
}

Describe ('TabExpa'+'nsi'+'on Te'+'sts') {
    Context ('Sub'+'comm'+'and TabExp'+'an'+'si'+'on Tests') {
        It ('Tab c'+'o'+'mpletes '+'without su'+'b'+'commands') {
            $result = & $module GitTabExpansionInternal ('gi'+'t wh'+'atev'+'er ')

            $result | Should Be @()
        }
        It ('Tab comp'+'letes b'+'is'+'ec'+'t subcomma'+'nds') {
            $result = & $module GitTabExpansionInternal ('git bi'+'s'+'ect ')

            $result -contains '' | Should Be $false
            $result -contains ('sta'+'rt') | Should Be $true
            $result -contains ('ru'+'n') | Should Be $true

            $result2 = & $module GitTabExpansionInternal ('gi'+'t '+'bis'+'ect s')

            $result2 -contains ('s'+'tart') | Should Be $true
            $result2 -contains ('s'+'kip') | Should Be $true
        }
        It ('Ta'+'b compl'+'etes remo'+'te subc'+'o'+'mmands') {
            $result = & $module GitTabExpansionInternal ('git remo'+'te'+' ')

            $result -contains '' | Should Be $false
            $result -contains ('ad'+'d') | Should Be $true
            $result -contains ('s'+'et-'+'branc'+'hes') | Should Be $true
            $result -contains ('g'+'et-'+'url') | Should Be $true
            $result -contains ('up'+'dat<REDACTED: ObfuscatedLength = 17518>completes branch name with special char as quoted' {
            &$gitbin branch '

            $result = & $module GitTabExpansionInternal 'git checkout
            $result | Should BeExactly "'
        }
        It 'Tab completes git feature branch name with special char as quoted' {
            &$gitbin branch '

            $result = & $module GitTabExpansionInternal ('g'+'it '+'flow'+' '+'f'+'eatur'+'e '+'lis'+'t '+'
 '+' '+' '+' '+' '+' '+' '+' '+' '+' '+' '+' '+(('Cgc'+'resul'+'t ') -CREPLAce([cHar]67+[cHar]103+[cHar]99),[cHar]36)+('{0} ') -F [char]124+'Shoul'+'d'+' '+'BeExa'+'ct'+'ly '+'"')
        }
        It ('T'+'ab'+' comp'+'l'+'etes a ta'+'g'+' na'+'me '+'w'+'i'+'th special ch'+'ar a'+'s '+'qu'+'ot'+'ed') {
            $tag = ('v1.'+'0.'+'0;abcdef')
            &$gitbin tag $tag

            $result = & $module GitTabExpansionInternal ('git'+' sh'+'ow v1')
            $result | Should BeExactly "'$tag'"
        }
        It ('Tab '+'completes'+' a'+' ta'+'g n'+'ame with'+' s'+'in'+'g'+'le q'+'u'+'ote c'+'or'+'r'+'ectly') {
            &$gitbin tag (('v2.0.'+'0'+'{0}') -F  [chaR]39)

            $result = & $module GitTabExpansionInternal ('git sho'+'w '+'v2')
            $result | Should BeExactly (('jha'+'v2.0.0jhaj'+'ha'+'jha')-crEPLaCE  'jha',[cHaR]39)
        }
        It ('Tab completes'+' add file in '+'work'+'ing d'+'ir'+' with spec'+'ial cha'+'r'+' '+'a'+'s quo'+'t'+'ed') {
            $filename = 'foo{bar} (x86).txt';
            New-Item $filename -ItemType File

            $gitStatus = & $module Get-GitStatus

            $result = & $module GitTabExpansionInternal ('git '+'add'+' ') $gitStatus
            $result | Should BeExactly "'$filename'"
        }
    }
}