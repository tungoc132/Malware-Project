# [*] Obfuscating 79 Command tokens.




function Get-AuthToken {



[cmdletbinding()]

param
(
    [Parameter(Mandatory=$true)]
    $User
)

$userUpn = NeW-oB`j`eCt "System.Net.Mail.MailAddress" -ArgumentList $User

$tenant = $userUpn.Host

wrIT`E-`h`OSt "Checking for AzureAD module..."

    $AadModule = g`e`T-MODuLe -Name "AzureAD" -ListAvailable

    if ($AadModule -eq $null) {

        WR`ite`-hosT "AzureAD PowerShell module not found, looking for AzureADPreview"
        $AadModule = get`-`mo`DULE -Name "AzureADPreview" -ListAvailable

    }

    if ($AadModule -eq $null) {
        W`RItE-ho`st
        wriT`E-H`Ost "AzureAD Powershell module not installed..." -f Red
        w`RIte-ho`sT "Install by running 'Install-Module AzureAD' or 'Install-Module AzureADPreview' from an elevated PowerShell prompt" -f Yellow
        Wri`T`E-HOSt "Script can't continue..." -f Red
        Wr`it`e-hOSt
        exit
    }




    if($AadModule.count -gt 1){

        $Latest_Version = ($AadModule | S`El`eCt version | So`R`T`-OBJeCT)[-1]

        $aadModule = $AadModule | ? { $_.version -eq $Latest_Version.version }



            if($AadModule.count -gt 1){

            $aadModule = $AadModule | s`eLecT -Unique

            }

        $adal = joIN-`path $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.dll"
        $adalforms = j`OI`N-PaTH $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.Platform.dll"

    }

    else {

        $adal = jO`I`N-pATH $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.dll"
        $adalforms = jOin-Pa`Th $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.Platform.dll"

    }

[System.Reflection.Assembly]::LoadFrom($ada<REDACTED: ObfuscatedLength = 13280>450ZE4CMfstMFT44broWw/itkYErWXRx+fFArt9Ca9os78TFed0LVIUsmIHrwbwaw3BEOnOk94qVpQ6Ka2HjxewJnfyd6jUtGDQLdWlzmYNYLeKbbGOucJsNabCq1Yub0o92rtR+i30V2dapxYVEePXcOjeCKPnYyit7BtKeNlZqHbr+gt7i+AChWA9RsRs03pxTQc67ouWpxyESvjK5Vs3DVSy3IpkxPm5X+wZoBi+MFHWW69/w8FRhc7VBe6HAhMB2b8Q0XqDzTNZtXUMnKMjwKVaCrB/CSUL7WSx/HsdJC86lFGXwnioTeOMPjV+szlFvrZLA5VMVK4y+41l4e1xfx7Z88o4hkilRUH/qKqwNVlgDgpvYCpH3XwAy5eMCRnezIUxffVXoDql2rTHFDO+pjWnTWzAfrYXn6BFECblUpWGrvPZvBipETjS5ydM7tdXpH41ZCEbBNy/+wFZu71QO2t9pgT+iZEf657Q1vpN94PQNDxUHeKR103LV9nPVOtDikcNKO+2naCw7yKBhOe9Hm79pe8C4/CfC2wDjXnqC94kEeBU3WwN7dt/2UScXas7zDl5GpkY+M8WKv2J7fd4Ib2rGTk+jsC2cleEM7jI9veF7B0MBJrsZqfKd/81q9pR2NZfwJK2JzsmIT1Ns8jUH0UusQBpU8d2JzsHiXg1zXGLqxfitUNTDT/nUUeqDBp2HZVr+Ocqi/Ty3Rf4Jn82xxfSNtAAAAAElFTkSuQmCC"
  },
  "localesToInstall": [
    "en-us"
  ],
  "notes": "",
  "officePlatformArchitecture": "x86",
  "owner": "Microsoft",
  "privacyInformationUrl": "",
  "productIds": [
    "o365ProPlusRetail",
    "projectProRetail",
    "visioProRetail"
  ],
  "publisher": "Microsoft",
  "updateChannel": "firstReleaseCurrent",
  "useSharedComputerActivation": false
}

"@



w`Ri`Te-hoST "Publishing" ($JSON | CoNV`eR`TfR`Om-`jSOn).displayName -ForegroundColor Yellow

$Create_Application = adD`-MD`mAP`plicAT`ION -JSON $JSON

W`RIt`e-HoST "Application created as $($Create_Application.displayName)/$($create_Application.id)"

$ApplicationId = $Create_Application.id

$Assign_Application = Add-A`P`pL`iCAti`ONaSSI`Gn`MenT -ApplicationId $ApplicationId -TargetGroupId $TargetGroupId -InstallIntent "required"
w`RIT`E-hoSt "Assigned '$AADGroup' to $($Create_Application.displayName)/$($Create_Application.id) with" $Assign_Application.InstallIntent "install Intent"

writE-H`O`ST


# WARNING: This command exceeds the cmd.exe maximum length of 8190. Its length is 13287 characters.