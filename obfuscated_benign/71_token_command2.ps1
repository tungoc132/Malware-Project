# [*] Obfuscating 83 Command tokens.




function Get-AuthToken {



[cmdletbinding()]

param
(
    [Parameter(Mandatory=$true)]
    $User
)

$userUpn = &('New'+'-Objec'+'t') "System.Net.Mail.MailAddress" -ArgumentList $User

$tenant = $userUpn.Host

&('Writ'+'e-Hos'+'t') "Checking for AzureAD module..."

    $AadModule = &('Get-M'+'odu'+'le') -Name "AzureAD" -ListAvailable

    if ($AadModule -eq $null) {

        &('Writ'+'e-H'+'ost') "AzureAD PowerShell module not found, looking for AzureADPreview"
        $AadModule = &('Get-Modu'+'l'+'e') -Name "AzureADPreview" -ListAvailable

    }

    if ($AadModule -eq $null) {
        &('w'+'rit'+'e'+'-host')
        &('write'+'-'+'host') "AzureAD Powershell module not installed..." -f Red
        &('w'+'rit'+'e-ho'+'st') "Install by running 'Install-Module AzureAD' or 'Install-Module AzureADPreview' from an elevated PowerShell prompt" -f Yellow
        &('wri'+'te-ho'+'st') "Script can't continue..." -f Red
        &('wr'+'ite-h'+'os'+'t')
        exit
    }




    if($AadModule.count -gt 1){

        $Latest_Version = ($AadModule | &('selec'+'t') version | &('Sor'+'t-Ob'+'ject'))[-1]

        $aadModule = $AadModule | &('?') { $_.version -eq $Latest_Version.version }



            if($AadModule.count -gt 1){

            $aadModule = $AadModule | &('selec'+'t') -Unique

            }

        $adal = &('Join-Pa'+'th') $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.dll"
        $adalforms = &('Join'+'-'+'Path') $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.Platform.dll"

    }

    else {

        $adal = &('Join-Pat'+'h') $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.dll"
        $adalforms = &(<REDACTED: ObfuscatedLength = 12839>e 0){

        &('w'+'rite-hos'+'t') "Authentication Token expired" $TokenExpires "minutes ago" -ForegroundColor Yellow
        &('w'+'rite'+'-hos'+'t')



            if($User -eq $null -or $User -eq ""){

            $User = &('R'+'ead-H'+'o'+'st') -Prompt "Please specify your user principal name for Azure Authentication"
            &('W'+'ri'+'te-Host')

            }

        $global:authToken = &('Get-Aut'+'hToke'+'n') -User $User

        }
}



else {

    if($User -eq $null -or $User -eq ""){

    $User = &('Re'+'ad'+'-Host') -Prompt "Please specify your user principal name for Azure Authentication"
    &('Wri'+'te'+'-'+'Host')

    }


$global:authToken = &('Get-A'+'ut'+'hTo'+'ken') -User $User

}







$AADGroup = &('Rea'+'d'+'-Host') -Prompt "Enter the Azure AD Group name where application will be assigned"

$TargetGroupId = (&('get-'+'AAD'+'Gr'+'oup') -GroupName "$AADGroup").id

    if($TargetGroupId -eq $null -or $TargetGroupId -eq ""){

    &('Wri'+'te-'+'Hos'+'t') "AAD Group - '$AADGroup' doesn't exist, please specify a valid AAD Group..." -ForegroundColor Red
    &('Write-Ho'+'s'+'t')
    exit

    }

&('W'+'rite-H'+'ost')




$ApplicationName = "IntuneApplication"

$Application = &('G'+'e'+'t-Intune'+'Appl'+'icatio'+'n') | &('?') { $_.displayName -eq "$ApplicationName" }

    if(@($Application).count -eq 1){

        $Application

        &('Add-Applic'+'a'+'tionA'+'ssign'+'ment') -ApplicationId $Application.id -TargetGroupId "$TargetGroupId" -InstallIntent required

    }

    else {

        &('Write'+'-'+'H'+'ost') "There are" @($Application).count "applications with display Name '$ApplicationName'..." -ForegroundColor Red
        &('Write-Ho'+'s'+'t')

    }

# WARNING: This command exceeds the cmd.exe maximum length of 8190. Its length is 12839 characters.