cMd   /cPowErSHELl -exEcutIoNpOLic  bYPAsS  "



param(
    [Parameter(HelpMessage = \"Azure AD Username\", Mandatory = $true)]
    [string]
    $Username,
    [Parameter(HelpMessage = \"User principal name to export data for\", Mandatory = $true)]
    [string]
    $Upn,
    [Parameter(HelpMessage = \"Include AzureAD data in export\")]
    [switch]
    $IncludeAzureAD,
    [Parameter(HelpMessage = \"Include all data in the export\")]
    [switch]
    $All,
    [Parameter(HelpMessage = \"Path to export data to\", Mandatory = $true)]
    [string]
    $OutputPath,
    [Parameter(HelpMessage = \"Format to export data in\")]
    [ValidateSet(\"JSON\", \"CSV\", \"XML\")]
    $ExportFormat = \"JSON\",
    [Parameter(DontShow = $true)]
    [string]
    $MsGraphVersion = \"beta\",
    [Parameter(DontShow = $true)]
    [string]
    $MsGraphHost = \"graph.microsoft.com\",
    [Parameter(DontShow = $true)]
    [string]
    $ConfigurationFile
)



function Log-Verbose($message) {
    Write-Verbose \"[$([System.DateTime]::Now)] - $message\"
}



function Log-Info ($message) {
    Write-Information \"INFO: [$([System.DateTime]::Now)] - $message\" -InformationAction Continue
}



function Log-Warning ($message) {
    Write-Warning \"[$([System.DateTime]::Now)] - $message\" -WarningAction Continue
}



function Log-Error ($message) {
    Write-Error \"[$([System.DateTime]::Now)] - $message\" -WarningAction Continue
}



function Log-FatalError($message) {
    Write-Error \"[$([System.DateTime]::Now)] - $message\" -WarningAction Continue
    Write-Error \"Script will now exit\"
    exit
}



function Get-AuthToken {



    [cmdletbinding(<REDACTED: ArgumentLength = 33217>
$DeviceManagementTroubleshootingEvents = Get-DeviceManagementTroubleshootingEvents
Export-Collection \"DeviceManagementTroubleshootingEvents\" \"DeviceManagementTroubleshootingEvents\" $DeviceManagementTroubleshootingEvents

$IosUpdateStatues = Get-IosUpdateStatuses
Export-Collection \"iOSUpdateStatus\" \"iOSUpdateStatuses\" $IosUpdateStatues

$ManagedDeviceMobileAppConfigurationStatuses = Get-ManagedDeviceMobileAppConfigurationStatuses  $ManagedDevices
Export-Collection \"MobileAppConfigurationStatuses\" \"MobileAppConfigurationStatus\" $ManagedDeviceMobileAppConfigurationStatuses

$DeviceManagementScriptRunStates = Get-DeviceManagementScriptRunStates
Export-Collection \"DeviceManagementScriptRunState\" \"DeviceManagementScriptRunStates\" $DeviceManagementScriptRunStates

$AppProtectionUserStatus = Get-AppProtectionUserStatuses
Export-Object \"ManagedAppProtectionStatusReport\" $AppProtectionUserStatus

$WindowsProtectionSummary = Get-WindowsProtectionSummary
Export-Object \"WindowsProtectionSummary\" $WindowsProtectionSummary

$ManagedAppUsageSummary = Get-ManagedAppUsageSummary
Export-Object \"ManagedAppUsageSummary\" $ManagedAppUsageSummary

$ManagedAppConfigurationStatusReport = Get-ManagedAppConfigurationStatusReport
Export-Object \"ManagedAppConfigurationStatusReport\" $ManagedAppConfigurationStatusReport

$TermsAndConditionsAcceptanceStatuses = Get-TermsAndConditionsAcceptanceStatuses
Export-Collection \"TermsAndConditionsAcceptanceStatus\" \"TermsAndConditionsAcceptanceStatuses\" $TermsAndConditionsAcceptanceStatuses

Export-RemainingData

Log-Info \"Export complete, files can be found at $OutputPath\"
Write-Host"
|
\--> PowErSHELl -exEcutIoNpOLic  bYPAsS  "



param(
    [Parameter(HelpMessage = \"Azure AD Username\", Mandatory = $true)]
    [string]
    $Username,
    [Parameter(HelpMessage = \"User principal name to export data for\", Mandatory = $true)]
    [string]
    $Upn,
    [Parameter(HelpMessage = \"Include AzureAD data in export\")]
    [switch]
    $IncludeAzureAD,
    [Parameter(HelpMessage = \"Include all data in the export\")]
    [switch]
    $All,
    [Parameter(HelpMessage = \"Path to export data to\", Mandatory = $true)]
    [string]
    $OutputPath,
    [Parameter(HelpMessage = \"Format to export data in\")]
    [ValidateSet(\"JSON\", \"CSV\", \"XML\")]
    $ExportFormat = \"JSON\",
    [Parameter(DontShow = $true)]
    [string]
    $MsGraphVersion = \"beta\",
    [Parameter(DontShow = $true)]
    [string]
    $MsGraphHost = \"graph.microsoft.com\",
    [Parameter(DontShow = $true)]
    [string]
    $ConfigurationFile
)



function Log-Verbose($message) {
    Write-Verbose \"[$([System.DateTime]::Now)] - $message\"
}



function Log-Info ($message) {
    Write-Information \"INFO: [$([System.DateTime]::Now)] - $message\" -InformationAction Continue
}



function Log-Warning ($message) {
    Write-Warning \"[$([System.DateTime]::Now)] - $message\" -WarningAction Continue
}



function Log-Error ($message) {
    Write-Error \"[$([System.DateTime]::Now)] - $message\" -WarningAction Continue
}



function Log-FatalError($message) {
    Write-Error \"[$([System.DateTime]::Now)] - $message\" -WarningAction Continue
    Write-Error \"Script will now exit\"
    exit
}



function Get-AuthToken {



    [cmdletbinding()]

<REDACTED: ArgumentLength = 33209>viceManagementTroubleshootingEvents = Get-DeviceManagementTroubleshootingEvents
Export-Collection \"DeviceManagementTroubleshootingEvents\" \"DeviceManagementTroubleshootingEvents\" $DeviceManagementTroubleshootingEvents

$IosUpdateStatues = Get-IosUpdateStatuses
Export-Collection \"iOSUpdateStatus\" \"iOSUpdateStatuses\" $IosUpdateStatues

$ManagedDeviceMobileAppConfigurationStatuses = Get-ManagedDeviceMobileAppConfigurationStatuses  $ManagedDevices
Export-Collection \"MobileAppConfigurationStatuses\" \"MobileAppConfigurationStatus\" $ManagedDeviceMobileAppConfigurationStatuses

$DeviceManagementScriptRunStates = Get-DeviceManagementScriptRunStates
Export-Collection \"DeviceManagementScriptRunState\" \"DeviceManagementScriptRunStates\" $DeviceManagementScriptRunStates

$AppProtectionUserStatus = Get-AppProtectionUserStatuses
Export-Object \"ManagedAppProtectionStatusReport\" $AppProtectionUserStatus

$WindowsProtectionSummary = Get-WindowsProtectionSummary
Export-Object \"WindowsProtectionSummary\" $WindowsProtectionSummary

$ManagedAppUsageSummary = Get-ManagedAppUsageSummary
Export-Object \"ManagedAppUsageSummary\" $ManagedAppUsageSummary

$ManagedAppConfigurationStatusReport = Get-ManagedAppConfigurationStatusReport
Export-Object \"ManagedAppConfigurationStatusReport\" $ManagedAppConfigurationStatusReport

$TermsAndConditionsAcceptanceStatuses = Get-TermsAndConditionsAcceptanceStatuses
Export-Collection \"TermsAndConditionsAcceptanceStatus\" \"TermsAndConditionsAcceptanceStatuses\" $TermsAndConditionsAcceptanceStatuses

Export-RemainingData

Log-Info \"Export complete, files can be found at $OutputPath\"
Write-Host"

WARNING: This command exceeds the cmd.exe maximum allowed length of 8190 characters! Its length is 33217 characters.

Executed:
  CLI:  Launcher\Cmd\7
  FULL: Out-PowerShellLauncher -ScriptBlock $ScriptBlock -ExecutionPolicy Bypass 2

Result:
cMd   /cPowErSHELl -exEcutIoNpOLic  bYPAsS  "



param(
    [Parameter(HelpMessage = \"Azure AD Username\", Mandatory = $true)]
    [string]
    $Username,
    [Parameter(HelpMessage = \"User principal name to export data for\", Mandatory = $true)]
    [string]
    $Upn,
    [Parameter(HelpMessage = \"Include AzureAD data in export\")]
    [switch]
    $IncludeAzureAD,
    [Parameter(HelpMessage = \"Include all data in the export\")]
    [switch]
    $All,
    [Parameter(HelpMessage = \"Path to export data to\", Mandatory = $true)]
    [string]
    $OutputPath,
    [Parameter(HelpMessage = \"Format to export data in\")]
    [ValidateSet(\"JSON\", \"CSV\", \"XML\")]
    $ExportFormat = \"JSON\",
    [Parameter(DontShow = $true)]
    [string]
    $MsGraphVersion = \"beta\",
    [Parameter(DontShow = $true)]
    [string]
    $MsGraphHost = \"graph.microsoft.com\",
    [Parameter(DontShow = $true)]
    [string]
    $ConfigurationFile
)



function Log-Verbose($message) {
    Write-Verbose \"[$([System.DateTime]::Now)] - $message\"
}



function Log-Info ($message) {
    Write-Information \"INFO: [$([System.DateTime]::Now)] - $message\" -InformationAction Continue
}



function Log-Warning ($message) {
    Write-Warning \"[$([System.DateTime]::Now)] - $message\" -WarningAction Continue
}



function Log-Error ($message) {
    Write-Error \"[$([System.DateTime]::Now)] - $message\" -WarningAction Continue
}



function Log-FatalError($message) {
    Write-Error \"[$([System.DateTime]::Now)] - $message\" -WarningAction Continue
    Write-Error \"Script will now exit\"
    exit
}



function Get-AuthToken {


<REDACTED: ObfuscatedLength = 33217>TroubleshootingEvents = Get-DeviceManagementTroubleshootingEvents
Export-Collection \"DeviceManagementTroubleshootingEvents\" \"DeviceManagementTroubleshootingEvents\" $DeviceManagementTroubleshootingEvents

$IosUpdateStatues = Get-IosUpdateStatuses
Export-Collection \"iOSUpdateStatus\" \"iOSUpdateStatuses\" $IosUpdateStatues

$ManagedDeviceMobileAppConfigurationStatuses = Get-ManagedDeviceMobileAppConfigurationStatuses  $ManagedDevices
Export-Collection \"MobileAppConfigurationStatuses\" \"MobileAppConfigurationStatus\" $ManagedDeviceMobileAppConfigurationStatuses

$DeviceManagementScriptRunStates = Get-DeviceManagementScriptRunStates
Export-Collection \"DeviceManagementScriptRunState\" \"DeviceManagementScriptRunStates\" $DeviceManagementScriptRunStates

$AppProtectionUserStatus = Get-AppProtectionUserStatuses
Export-Object \"ManagedAppProtectionStatusReport\" $AppProtectionUserStatus

$WindowsProtectionSummary = Get-WindowsProtectionSummary
Export-Object \"WindowsProtectionSummary\" $WindowsProtectionSummary

$ManagedAppUsageSummary = Get-ManagedAppUsageSummary
Export-Object \"ManagedAppUsageSummary\" $ManagedAppUsageSummary

$ManagedAppConfigurationStatusReport = Get-ManagedAppConfigurationStatusReport
Export-Object \"ManagedAppConfigurationStatusReport\" $ManagedAppConfigurationStatusReport

$TermsAndConditionsAcceptanceStatuses = Get-TermsAndConditionsAcceptanceStatuses
Export-Collection \"TermsAndConditionsAcceptanceStatus\" \"TermsAndConditionsAcceptanceStatuses\" $TermsAndConditionsAcceptanceStatuses

Export-RemainingData

Log-Info \"Export complete, files can be found at $OutputPath\"
Write-Host"

# WARNING: This command exceeds the cmd.exe maximum length of 8190.Its length is 33217 characters.