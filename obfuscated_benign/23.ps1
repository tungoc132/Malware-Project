. $PSScriptRoot\Shared.ps1

Describe ("{3}{6}{7}{2}{0}{8}{4}{1}{5}" -f 'pansi','S','x','Para','ST',' Tests','msT','abE','on V') {
    Context ("{8}{1}{5}{0}{2}{7}{3}{6}{4}" -f 'amet','s','ers','ansio','ts','h Par','n Tes',' TabExp','Pu') {

        BeforeEach {
            [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute(("{2}{0}{4}{1}{9}{6}{5}{7}{3}{8}" -f'l','r','PSUseDec','nt','a','si','ThanAs','gme','s','edVarsMore'), '')]
            $repoPath = NewGitTempRepo


            &$gitbin config alias.test-vsts-pr "!f() { exec vsts code pr \`"`$`@\`"; }; f"
        }
        AfterEach {
            RemoveGitTempRepo $repoPath
        }

        It ("{5}{8}{3}{2}{10}{7}{1}{6}{9}{0}{4}"-f 'et','r oops','t','omple','ers values','Tab ',' ','r git p','c','param','es empty fo') {
            $result = & $module GitTabExpansionInternal ("{5}{1}{3}{6}{2}{0}{4}{7}"-f'r oops','t ','vsts-p','t',' -','gi','est-','-')
            $result | Should Be @()
        }

        It ("{9}{6}{7}{8}{4}{1}{10}{3}{13}{5}{2}{11}{12}{0}"-f 's',' ','er','ara','it pr oops short','et','b',' comple','tes empty for g','Ta','p',' ','value','m') {
            $result = & $module GitTabExpansionInternal ("{1}{0}{3}{2}{4}{5}"-f ' te','git','r o','st-vsts-p','o','ps -')
            $result | Should Be @()
        }

        It ("{1}{7}{2}{5}{11}{9}{0}{6}{3}{4}{10}{8}{12}" -f 'reat','T','m','para','me','pl','e ','ab co','rs va','pr c','te','etes git ','lues') {
            $result = & $module GitTabExpansionInternal ("{2}{6}{5}{7}{0}{3}{4}{1}"-f ' creat','-','git','e ','-','tes',' ','t-vsts-pr')
            $result -contains ("{3}{1}{0}{2}"-f'et','to-compl','e','--au') | Should Be $true
        }
        It ("{6}{8}{4}{3}{1}{0}{7}{2}{5}{9}"-f't pr create auto-c','gi','te parameters va','s ','complete','lu','T','omple','ab ','es') {
            $result = & $module GitTabExpansionInternal ("{10}{4}{8}{2}{3}{0}{9}{1}{5}{6}{7}"-f '--','uto','re','ate ','st','-c','omplete ','--','s-pr c','a','git test-v')
            $result -contains ("{5}{0}{4}{3}{6}{2}{1}"-f'de','nch','e-source-bra','e','l','--','t') | Should Be $true
        }

        It ("{6}{11}{9}{3}{0}{2}{13}{1}{4}{8}{5}{7}{12}{10}" -f' show al','ar','l ',' pr','a','eter','Tab c','s','m','s git','ues','omplete',' val','p') {
            $result = & $module GitTabExpansionInternal ("{2}{0}{5}{4}{6}{1}{3}"-f 'v','-','git test-','-','s','st','-pr show ')
            $result -contains '--' | Should Be $false
            $result -contains ("{0}{1}"-f '--debu','g') | Should Be $true
            $result -contains ("{0}{1}"-f '-','-help') | Should Be $true
            $result -contains ("{2}{0}{1}" -f'p','ut','--out') | Should Be $true
            $result -contains ("{1}{0}{2}"-f'ue','--q','ry') | Should Be $true
            $result -contains ("{0}{1}{2}" -f'-','-verbos','e') | Should Be $true
        }

        It ("{3}{1}{14}{0}{4}{8}{11}{15}{6}{2}{12}{13}{5}{7}{10}{9}" -f 'ompletes g','b','t p','Ta','it p','pa',' shor','r','r creat','eters','am','e al','u','sh ',' c','l') {
            $result = & $module GitTabExpansionInternal ("{2}{4}{3}{5}{0}{1}" -f'at','e -','gi',' test-vsts-p','t','r cre')
            $result -contains '-d' | Should Be $true
            $result -contains '-i' | Should Be $true
            $result -contains '-p' | Should Be $true
            $result -contains '-r' | Should Be $true
            $result -contains '-s' | Should Be $true
            $result -contains '-h' | Should Be $true
            $result -contains '-o' | Should Be $true
        }
    }
}