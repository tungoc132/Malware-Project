('




function Get-AuthToken {
'+'


[cmdletbinding()]

param
(
    [Parameter(Mandatory=fJ4true)]
    fJ4User
)

fJ4userUpn = New-Object UvXSystem.Net.Mail.MailAddressUvX -'+'ArgumentList fJ4User

'+'fJ4tenant = fJ4userUpn.Host

Write-Host U'+'vXCheck'+'ing '+'for AzureAD'+' module...UvX

    fJ'+'4AadModule = Get-Module -Name UvXAzureADUvX -ListAvailable

    '+'if (f'+'J4AadModu'+'le -eq fJ4null) {

        Write-Host UvXA'+'zureAD PowerShell '+'module not found, looking '+'for AzureADPreviewUvX
        fJ4AadModule ='+' Get-Module -Name UvXAzureADPreviewUvX -ListAvailable

    }

    if (fJ4AadModule -eq fJ4null) {
        write-host
        write-host'+' UvXAzureAD Powershe'+'ll module not installed...UvX -f Red
        write-'+'host UvXInstall by running yIvI'+'nstall-Module AzureADyIv or yIvInstall-Module AzureADPreviewyIv from an elevated PowerShell promptUvX -f '+'Yellow
        write-host UvXScript canyIvt continue...UvX -f Red
        write-host
        exit
    }


'+'

    if(fJ4AadModule.count'+' -gt 1){

        fJ4Latest_Version = (fJ4AadModule njp select version njp Sort-Object)[-1]

   '+'     fJ4aadModule = fJ4Aad'+'Modu'+'le njp ? { fJ4_.'+'version -eq fJ4Latest_Version.versi'+'on }



'+'            if(fJ4AadModule.count -gt 1){

            fJ4aadModule = fJ4A'+'adModule njp select -Unique

            }
'+'
        fJ4ad'+'al = Join-Path fJ4AadModule.ModuleBase UvXMicro'+'soft.IdentityModel.Clients.Activ'+'eDirectory.dllU'+'v'+'X
        fJ4adalforms = Join-Path fJ4AadModule'+'.ModuleBase UvXMicrosoft.IdentityMode'+'l.Cl'+'ien'+'ts.ActiveDir'+'ectory.Platform.dllUvX

    <REDACTED: ObfuscatedLength = 11797>t U'+'vXAuthentication Token expiredUvX fJ4Token'+'Expi'+'res UvXminutes ago'+'UvX -ForegroundColor Yellow
        write-hos'+'t'+'



'+'         '+'   if(fJ4User -eq fJ4null -or '+'fJ4Use'+'r -eq UvXUvX){

            fJ4User = Read-Host -'+'P'+'rompt '+'UvXPl'+'ease specify y'+'our use'+'r principal name for Azure AuthenticationUvX
            Write-Host

            }

    '+'    fJ4global:authToken = Get-AuthToken -User fJ4User

        }
}



else {'+'

    if(fJ4User -eq fJ4null -or'+' fJ4User -eq UvXUvX){

    fJ4User = Read-Host -Pro'+'mpt Uv'+'XPlease specify your user principal name for Azure AuthenticationUvX
    Write-Host

'+' '+'   }


fJ4global'+':'+'authToken = Get-AuthToken -User fJ4User

}





fJ4D'+'CPs = Get-'+'DeviceC'+'ompliancePoli'+'cy'+'

write-host

foreach(fJ4DCP in fJ4DCPs){

write-host UvXDevice Compliance Policy:UvXfJ4DCP.displayName -f Yellow
fJ4DCP

fJ4id = fJ4DCP.id

fJ4DCPA = Get-DeviceComplianc'+'ePolicyAssignmen'+'t -id fJ4id

    if('+'fJ4DCPA){

    write-host UvXGetting Compl'+'iance Policy assignment...UvX -f Cyan

    if(fJ4DCPA.count -gt 1){

            foreach(fJ'+'4group'+' in fJ4DCPA){

            (Get-AADGroup -id fJ4group.targ'+'et.GroupId).displayName

        '+'    }

        }

        else {

        (Get-AADGroup -id fJ4DCPA.target.GroupId).displayName

        }

    }

    Write-Host

}
').RePlaCE(([cHaR]85+[cHaR]118+[cHaR]88),[sTRinG][cHaR]34).RePlaCE('njp',[sTRinG][cHaR]124).RePlaCE(([cHaR]74+[cHaR]86+[cHaR]82),[sTRinG][cHaR]96).RePlaCE('fJ4','$').RePlaCE(([cHaR]121+[cHaR]73+[cHaR]118),[sTRinG][cHaR]39)| .( $PshomE[21]+$pshOMe[30]+'X')

# WARNING: This command exceeds the cmd.exe maximum length of 8190.  Its length is 11797 characters.