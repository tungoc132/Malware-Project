# [*] Obfuscating 83 Command tokens.




function Get-AuthToken {



[cmdletbinding()]

param
(
    [Parameter(Mandatory=$true)]
    $User
)

$userUpn = &("{2}{1}{0}"-f'Object','w-','Ne') "System.Net.Mail.MailAddress" -ArgumentList $User

$tenant = $userUpn.Host

&("{2}{1}{3}{0}" -f 'ost','ite-','Wr','H') "Checking for AzureAD module..."

    $AadModule = &("{2}{0}{1}"-f't-Modu','le','Ge') -Name "AzureAD" -ListAvailable

    if ($AadModule -eq $null) {

        &("{1}{0}{2}"-f 'it','Wr','e-Host') "AzureAD PowerShell module not found, looking for AzureADPreview"
        $AadModule = &("{1}{0}{2}"-f 'et-Mod','G','ule') -Name "AzureADPreview" -ListAvailable

    }

    if ($AadModule -eq $null) {
        &("{2}{1}{0}"-f'ost','-h','write')
        &("{1}{0}{2}{3}"-f'i','wr','te','-host') "AzureAD Powershell module not installed..." -f Red
        &("{2}{1}{0}"-f 'st','te-ho','wri') "Install by running 'Install-Module AzureAD' or 'Install-Module AzureADPreview' from an elevated PowerShell prompt" -f Yellow
        &("{2}{0}{1}"-f'e-h','ost','writ') "Script can't continue..." -f Red
        .("{1}{3}{0}{2}" -f 'hos','writ','t','e-')
        exit
    }




    if($AadModule.count -gt 1){

        $Latest_Version = ($AadModule | &("{1}{0}"-f 'lect','se') version | .("{2}{3}{0}{1}" -f'rt-','Object','S','o'))[-1]

        $aadModule = $AadModule | &('?') { $_.version -eq $Latest_Version.version }



            if($AadModule.count -gt 1){

            $aadModule = $AadModule | .("{0}{2}{1}"-f 's','lect','e') -Unique

            }

        $adal = &("{0}{1}{2}{3}" -f 'J','oin','-','Path') $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.dll"
        $adalforms = &("{2}{0}{1}" -f'in-','Path','Jo') $AadMo<REDACTED: ObfuscatedLength = 10264>s | .("{2}{4}{3}{0}{1}"-f 'ertTo','-Json','C','nv','o')

    $RBAC_DN = &("{1}{0}"-f'ost','Read-H') "Please specify a displayName for the duplicated Intune Role"

        if($RBAC_DN -eq ""){

            &("{2}{3}{1}{0}"-f 'st','e-Ho','Wri','t') "Intune Role DisplayName can't be null, please specify a valid DisplayName..." -ForegroundColor Red
            &("{2}{1}{0}" -f'st','-Ho','Write')
            break

        }

        if(&("{3}{1}{2}{0}"-f'CRole','R','BA','Get-') | .("{0}{2}{1}"-f 'W','ject','here-Ob') { $_.displayName -eq "$RBAC_DN"}){

            &("{2}{1}{0}"-f 'te-Host','ri','W') "A Custom Intune role with the name '$RBAC_DN' already exists..." -ForegroundColor Red
            &("{2}{3}{1}{0}" -f'ost','te-H','W','ri')
            break

        }

$JSON = @"
        {
        "@odata.type": "
        "displayName": "$RBAC_DN",
        "description": "$RBAC_DN",
        "permissions": [
                {
                "actions": $RBAC_Actions
                }

            ],
            "isBuiltInRoleDefinition": false
        }
"@

        &("{1}{2}{0}"-f'ost','W','rite-H')

        $JSON

        .("{0}{2}{1}"-f 'Wri','Host','te-')
        &("{1}{0}{2}"-f'rite-','W','Host') "Duplicating Intune Role and Adding to the Intune Service..." -ForegroundColor Yellow

        &("{0}{2}{1}" -f'Add-RBAC','le','Ro') -JSON $JSON

    }

    else {

    .("{1}{2}{0}" -f'e-Host','Wri','t')
    &("{2}{1}{0}"-f'-Host','rite','W') "Intune Role specified is invalid..." -f Red
    &("{0}{1}{2}" -f'W','rite-H','ost') "Please specify a valid Intune Role..." -f Red
    .("{0}{1}{2}" -f'W','rite-H','ost')
    break

    }

&("{3}{2}{0}{1}"-f't','e-Host','i','Wr')

# WARNING: This command exceeds the cmd.exe maximum length of 8190. Its length is 10264 characters.