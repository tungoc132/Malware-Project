# [*] Obfuscating 83 Command tokens.




function Get-AuthToken {



[cmdletbinding()]

param
(
    [Parameter(Mandatory=$true)]
    $User
)

$userUpn = N`ew-obJ`ect "System.Net.Mail.MailAddress" -ArgumentList $User

$tenant = $userUpn.Host

WR`itE-HO`ST "Checking for AzureAD module..."

    $AadModule = gE`T-modU`Le -Name "AzureAD" -ListAvailable

    if ($AadModule -eq $null) {

        W`RI`Te-`HOsT "AzureAD PowerShell module not found, looking for AzureADPreview"
        $AadModule = G`eT-MO`DulE -Name "AzureADPreview" -ListAvailable

    }

    if ($AadModule -eq $null) {
        WRitE`-h`O`st
        wR`IT`e-hoST "AzureAD Powershell module not installed..." -f Red
        wr`iTE-`hO`ST "Install by running 'Install-Module AzureAD' or 'Install-Module AzureADPreview' from an elevated PowerShell prompt" -f Yellow
        w`RITE`-Ho`St "Script can't continue..." -f Red
        W`RitE-h`OSt
        exit
    }




    if($AadModule.count -gt 1){

        $Latest_Version = ($AadModule | SEl`E`CT version | SOrt-`O`BJ`EcT)[-1]

        $aadModule = $AadModule | ? { $_.version -eq $Latest_Version.version }



            if($AadModule.count -gt 1){

            $aadModule = $AadModule | SE`LE`Ct -Unique

            }

        $adal = JOi`N-Pa`TH $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.dll"
        $adalforms = JOiN`-`pATH $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.Platform.dll"

    }

    else {

        $adal = joI`N-PATH $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.dll"
        $adalforms = j`oIn-`pATh $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.Platform.dll"

    }

[System.Reflection.Assembly]::LoadFrom(<REDACTED: ObfuscatedLength = 13286>O450ZE4CMfstMFT44broWw/itkYErWXRx+fFArt9Ca9os78TFed0LVIUsmIHrwbwaw3BEOnOk94qVpQ6Ka2HjxewJnfyd6jUtGDQLdWlzmYNYLeKbbGOucJsNabCq1Yub0o92rtR+i30V2dapxYVEePXcOjeCKPnYyit7BtKeNlZqHbr+gt7i+AChWA9RsRs03pxTQc67ouWpxyESvjK5Vs3DVSy3IpkxPm5X+wZoBi+MFHWW69/w8FRhc7VBe6HAhMB2b8Q0XqDzTNZtXUMnKMjwKVaCrB/CSUL7WSx/HsdJC86lFGXwnioTeOMPjV+szlFvrZLA5VMVK4y+41l4e1xfx7Z88o4hkilRUH/qKqwNVlgDgpvYCpH3XwAy5eMCRnezIUxffVXoDql2rTHFDO+pjWnTWzAfrYXn6BFECblUpWGrvPZvBipETjS5ydM7tdXpH41ZCEbBNy/+wFZu71QO2t9pgT+iZEf657Q1vpN94PQNDxUHeKR103LV9nPVOtDikcNKO+2naCw7yKBhOe9Hm79pe8C4/CfC2wDjXnqC94kEeBU3WwN7dt/2UScXas7zDl5GpkY+M8WKv2J7fd4Ib2rGTk+jsC2cleEM7jI9veF7B0MBJrsZqfKd/81q9pR2NZfwJK2JzsmIT1Ns8jUH0UusQBpU8d2JzsHiXg1zXGLqxfitUNTDT/nUUeqDBp2HZVr+Ocqi/Ty3Rf4Jn82xxfSNtAAAAAElFTkSuQmCC"
  },
  "localesToInstall": [
    "en-us"
  ],
  "notes": "",
  "officePlatformArchitecture": "x86",
  "owner": "Microsoft",
  "privacyInformationUrl": "",
  "productIds": [
    "o365ProPlusRetail",
    "projectProRetail",
    "visioProRetail"
  ],
  "publisher": "Microsoft",
  "updateChannel": "firstReleaseCurrent",
  "useSharedComputerActivation": false
}

"@



wRite`-ho`ST "Publishing" ($JSON | cOnvE`R`Tfrom-j`sON).displayName -ForegroundColor Yellow

$Create_Application = a`dD-MdM`APp`li`CATIOn -JSON $JSON

WR`Ite-h`Ost "Application created as $($Create_Application.displayName)/$($create_Application.id)"

$ApplicationId = $Create_Application.id

$Assign_Application = Add-`ApP`LIc`ATIoNaS`si`gnme`Nt -ApplicationId $ApplicationId -TargetGroupId $TargetGroupId -InstallIntent "required"
wRIt`E-`HosT "Assigned '$AADGroup' to $($Create_Application.displayName)/$($Create_Application.id) with" $Assign_Application.InstallIntent "install Intent"

W`Ri`TE-HOst


# WARNING: This command exceeds the cmd.exe maximum length of 8190. Its length is 13286 characters.