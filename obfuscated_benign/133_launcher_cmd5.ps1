




function Get-AuthToken {



[cmdletbinding()]

param
(
    [Parameter(Mandatory=$true)]
    $User
)

$userUpn = New-Object "System.Net.Mail.MailAddress" -ArgumentList $User

$tenant = $userUpn.Host

Write-Host "Checking for AzureAD module..."

    $AadModule = Get-Module -Name "AzureAD" -ListAvailable

    if ($AadModule -eq $null) {

        Write-Host "AzureAD PowerShell module not found, looking for AzureADPreview"
        $AadModule = Get-Module -Name "AzureADPreview" -ListAvailable

    }

    if ($AadModule -eq $null) {
        write-host
        write-host "AzureAD Powershell module not installed..." -f Red
        write-host "Install by running 'Install-Module AzureAD' or 'Install-Module AzureADPreview' from an elevated PowerShell prompt" -f Yellow
        write-host "Script can't continue..." -f Red
        write-host
        exit
    }




    if($AadModule.count -gt 1){

        $Latest_Version = ($AadModule | select version | Sort-Object)[-1]

        $aadModule = $AadModule | ? { $_.version -eq $Latest_Version.version }



            if($AadModule.count -gt 1){

            $aadModule = $AadModule | select -Unique

            }

        $adal = Join-Path $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.dll"
        $adalforms = Join-Path $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.Platform.dll"

    }

    else {

        $adal = Join-Path $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.dll"
        $adalforms = Join-Path $AadModule.ModuleBase "Microsoft.IdentityModel.Clients.ActiveDirectory.Platform.dll"<REDACTED: ObfuscatedLength = 15888>      else {

        Write-Host "No Protected Applocker Files targeted..." -ForegroundColor Red
        Write-Host

        }

    }



    elseif($ManagedAppPolicy.'@odata.type' -eq "

        $Win10ManagedAppProtection = Get-ManagedAppProtection -id $ManagedAppPolicy.id -OS "WIP_MDM"

        write-host "Managed App Policy - Assignments" -f Cyan

        $Win10Assignments = ($Win10ManagedAppProtection | select assignments).assignments

            if($Win10Assignments){

                foreach($Group in $Win10Assignments.target.groupId){

                (Get-AADGroup -id $Group).displayName

                }

                Write-Host

            }

            else {

            Write-Host "No assignments set for this policy..." -ForegroundColor Red
            Write-Host

            }

        write-host "Protected Apps" -f Cyan

        if($Win10ManagedAppProtection.protectedApps){

        $Win10ManagedAppProtection.protectedApps.displayName

        Write-Host

        }

        else {

        Write-Host "No Protected Apps targeted..." -ForegroundColor Red
        Write-Host

        }


        write-host "Protected AppLocker Files" -ForegroundColor Cyan

        if($Win10ManagedAppProtection.protectedAppLockerFiles){

        $Win10ManagedAppProtection.protectedAppLockerFiles.displayName

        Write-Host

        }

        else {

        Write-Host "No Protected Applocker Files targeted..." -ForegroundColor Red
        Write-Host

        }

    }

}

# WARNING: This command exceeds the cmd.exe maximum length of 8190.Its length is 15888 characters.