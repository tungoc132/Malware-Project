

function private:Get-TortoiseGitPath {
    if ((Test-Path (('C:bWcProgram '+'F'+'i'+'les'+'b'+'WcTortoiseGitbWc'+'b'+'inbW'+'cT'+'o'+'r'+'t'+'o'+'iseGit'+'Pro'+'c'+'.exe') -cREpLaCE'bWc',[char]92)) -eq $true) {

        return (('C'+':{0}Program '+'F'+'iles{0}'+'T'+'ortoise'+'Git{0'+'}bi'+'n{0'+'}T'+'orto'+'ise'+'G'+'it'+'P'+'roc.ex'+'e')-f  [cHaR]92)
    }

    return (('C'+':WHyProg'+'ram Fi'+'les'+'WHyTor'+'to'+'iseGi'+'t'+'WHybinWHyTortoiseProc.exe')-REPLACE([chaR]87+[chaR]72+[chaR]121),[chaR]92)
}

$Global:TortoiseGitSettings = new-object PSObject -Property @{
    TortoiseGitPath = (Get-TortoiseGitPath)
    TortoiseGitCommands = @{
        ('abo'+'ut') = ('a'+'bout');
        ('ad'+'d') = ('a'+'dd');
        ('blam'+'e') = ('blam'+'e');
        ('c'+'at') = ('ca'+'t');
        ('clean'+'up') = ('cle'+'anup');
        ('cle'+'an') = ('c'+'leanup');
        ('c'+'omm'+'it') = ('co'+'mmi'+'t');
        ('con'+'fli'+'cted'+'itor') = ('con'+'flicte'+'d'+'it'+'or');
        ('cr'+'eat'+'epat'+'ch') = ('creat'+'epa'+'tc'+'h');
        ('pa'+'tch') = ('creat'+'epat'+'ch');
        ('dif'+'f') = ('dif'+'f');
        ('expo'+'rt') = ('exp'+'ort');
        ('h'+'elp') = ('he'+'lp');
        ('i'+'gn'+'ore') = ('ign'+'ore');
        ('l'+'og') = ('lo'+'g');
        ('mer'+'ge') = ('merg'+'e');
        ('pul'+'l') = ('p'+'ull');
        ('pus'+'h') = ('pu'+'sh');
        ('r'+'e'+'base') = ('rebas'+'e');
        ('refbrows'+'e') = ('r'+'e'+'fbrowse');
        ('r'+'eflo'+'g') = ('r'+'eflog');
        ('remov'+'e') = ('re'+'mo'+'ve');
        'rm' = ('re'+'move');
        ('ren'+'ame') = ('rena'+'me');
        'mv' = ('re'+'n'+'ame');
        ('rep'+'ocr'+'eate') = ('r'+'ep'+'ocr'+'eate');
        ('ini'+'t') = ('repoc'+'re'+'ate');
        ('r'+'epostat'+'us') = ('repo'+'stat'+'us');
        ('s'+'tatus') = ('repo'+'st'+'atus');
        ('re'+'so'+'lve') = ('resol'+'v'+'e');
        ('reve'+'rt') = ('r'+'evert');
        ('setti'+'ng'+'s') = ('sett'+'ings');
        ('c'+'onfig') = ('se'+'ttin'+'gs');
        ('stas'+'h') = ('s'+'tash');
        ('st'+'ashapp'+'ly') = ('stas'+'happ'+'ly');
        ('sta'+'shsav'+'e') = ('sta'+'sh'+'save');
        ('sub'+'ad'+'d') = ('s'+'uba'+'dd');
        ('sub'+'syn'+'c') = ('sub'+'syn'+'c');
        ('su'+'bupdat'+'e') = ('su'+'b'+'update');
        ('switc'+'h') = ('swi'+'tch');
        ('ch'+'e'+'ckout') = ('sw'+'i'+'tch');
        ('fe'+'tch') = ('s'+'ync');
        ('sy'+'nc') = ('sy'+'nc');
    }
}

function tgit {
    if ($args) {

        if ($Global:TortoiseGitSettings.TortoiseGitCommands.ContainsKey($args[0])) {
            $args[0] = $Global:TortoiseGitSettings.TortoiseGitCommands.Get_Item($args[0])
        }

        if ($args[0] -eq ('hel'+'p')) {

            $Global:TortoiseGitSettings.TortoiseGitCommands.Values.GetEnumerator() | Sort-Object | Get-Unique
            return
        }

        $newArgs = @()
        $newArgs += ('/c'+'omman'+'d:') + $args[0]

        $cmd = $args[0]

        if ($args.length -gt 1) {
            $args[1..$args.length] | ForEach-Object { $newArgs += $_ }
        }

        & $Global:TortoiseGitSettings.TortoiseGitPath $newArgs
    }
}