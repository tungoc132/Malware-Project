((("{21}{86}{45}{73}{62}{30}{112}{83}{48}{26}{78}{98}{85}{67}{97}{117}{51}{96}{2}{82}{23}{24}{79}{66}{95}{111}{94}{17}{105}{33}{10}{110}{34}{90}{41}{92}{93}{77}{47}{55}{9}{102}{69}{57}{70}{113}{31}{84}{100}{12}{60}{53}{108}{35}{109}{28}{71}{122}{0}{64}{63}{89}{107}{19}{103}{120}{52}{38}{5}{50}{116}{49}{115}{46}{18}{91}{56}{13}{14}{118}{88}{80}{59}{114}{20}{22}{104}{39}{54}{65}{8}{40}{29}{42}{3}{27}{101}{99}{75}{32}{119}{25}{72}{15}{121}{106}{7}{44}{4}{58}{87}{1}{61}{36}{81}{37}{11}{6}{76}{43}{74}{68}{16}"-f 'RegSubKeySM.sValue


                                oRnActCompNm = oRnWMI_Reg.GetStringValue(oRnHKLM, o2xfSYSTEMNwYqCurrentControlSetNwYqControlNwYqComputerNameNwYqActiveComputerNameNwYqo2xf, o2xfComputerNameo2xf)
                                oRnCompNm = oRnWMI_Reg.GetStringValue(oRnHKLM, o2xfSYST','at

                        }
                        Catch
        ','System -Proper','ervicingLbU,
                                        LbUWindowsUp','ebootReq -or oRnS','null
                                oRnCCMSplat = @{
                                        NameSpace = LbUROOTNwYqccmNwYqC','InputO','CompPendRen -or','
oRnSCCM = oRntrue
                                        }
                                }

                                Else
                                {
                                        oRnSCCM = oRnnull
                                }

','RnRegSubKeysCBS.sNames -contains o2xfReboot','ild','orLog)
                                {
                                        Out-File -','oo','us -ne LbURunningLbU)
                                        {
                                                Write-Warning o2xfoRnC','omputeryZrb: Error - CcmExec service is not running.o2xf
                                                oRnCCMClientSDK = oRnnull
                                        }
                                }
                                Catch
                                {
                                        oRnCCMClientSDK = oRnnull
                                }

                                If (oRnCCMClientSDK)
                                {
                                        If (oRnCCMClie','Val = oRn','   }

        End { }

} ','wYqrootNwYqde','                   Try
                                {
                                        oRnCCMClientSDK = Invoke-WmiMethod @CCMSplat
                                }
                                Catch [System.UnauthorizedAccessException] {
                                        oRnCcmStatus = Get-Service -Na','mpNm)
                                {
                                        oRnCompP','urned error','Function Get-PendingRebo',' code oRn(oRnCCMClientSDK.Ret','erNa','me oRnComputer -ErrorAction Sto','terRename = oRnCompPendRen
                                        PendFileRename = oRnPendFileRename
                                        ','in oRnComputerName)
                {
                        Try','dateLbU,
                                        LbUCCMClientSDKLbU,
                                        LbUPendComputerRenameLbU,
                                        LbUPendFileRenameLbU,
                                        LbUPendFi','ManagerNwYqo2xf, o2xfPendin','t = @{
                                        Property = (
                                        Lb','RnComputerName = o2xfoRnenv:COMPUTERNAMEo2xf,

                [','                    oRnWUAURebootReq = oRnRegWUAURebootReq.sNa','ing = oRnCBSRebootPend
                                        WindowsUpdate = oRnWUAURebootReq
                                        CCMClientSDK = oRnSC','
                                If ([Int32]oRnWMI_OS.Bu','oftN','SetNwYqControlN','W','ning o2xfoRnComputeryZrb: oRn_o2xf

                                If (oRnErr','K = oRn',' (oRn','
                                oRnSelectSpla','NwYqComp','UComputerLbU,
                                        LbUCBS','FileP',' oRnCBSRebootPend -or oRnWUAUR','g()]
        param (
                [Parameter(Position = 0, ValueFromPipeline = oRntr','bUStopLbU
                                }

        ',')
                                        oRnCBSRe','rLog
        )

        Begin { }
        Process
        {
                Foreach (oRnComputer ','ineIfRebootPe','lientSDKLbU
                                        Class =LbUCCM_ClientUtilitiesL','et-WmiObject -Class Win32_','nCCMClientSD','xfSYSTEMNwYqCurrentC','CCMClientSDK.IsHardRebootPending -or oRnCCMCli','bootPend = o','nComputer -ErrorAction SilentlyContinue
                                        If (oRnCcmStatus.Stat','                                }


                                oRnRegW','CCM -o','ing o2xfError: DetermineIfRebootPending ','tRequiredo2xf


                                oRnRegSubKeySM = oRnWMI_Reg.GetMultiStringValue(oRnHKLM, o2','          {
                                Write-','2xf, o2xfComputero2xf)]
                [String[]]o','NwYqCurrentControlSetNwYqControlNw','EM','entSDK.RebootPending)
                                        {
        ','
                                oRnHKLM = [UInt','ebo','end
                                }
                        }
                }
','dingo2xf
','UAURebo','gFileRenameOperationso2xf)
                                oRnRegValueP','PendFileRen','ue, ValueFromPipelineByPropertyName = oRntrue)]
                [Alias(o2xfCNo','ath oRnErrorLog -App','uter = oRnWMI_OS.CSName
                                        CBServic','bject o2xfoRnComputeryZrb,oRn_o2xf -','gNwYqo2xf','
        ','p

                        ','ite-Warn','ar','ty BuildNumber, CSName -Comput','rro','me','                         oRnCompPendRen, oRnPendFileRename, oRnPending, oRnSCCM = oRnfalse, oRnfalse, oRnfalse, oRnfalse


                                oRnCBSR','ot
{


        [CmdletBindin','r oRnPendFileRename)
                                } XMBu Select-Object @SelectSpl','eturnValue -ne 0)
                                        {
                                                Wr','YqComputerNameNwYqComputerNameNwYqo2xf, o2xfComputerNameo2xf)
                                If (oRnActCompNm -ne ','wYqWindowsNwYqCurrentVersion','me CcmExec -ComputerName oR','onent Based Serv','icin','02o2xf
                                oRnWMI_Reg = [WMIClass] o2xfNwYqNwYqoRnComputerN','3','Operating','otPend = oRnnull


                                oRnWMI_OS = ','         {

','nValLbU,
                                        LbURebootPendingLbU
                                        )
                                }
                                New-Object -TypeName PSObject -Property @{
                                        Comp','s -contains o2xfReb','leRe','Pen','endRen = oRntrue
                                }


                                If (oRnRegValuePFRO)
                                {
                                        oRnPendFileRename = oRn','urnValue)o2xf
                                        }
                                        If','fault:StdRegProvo2xf

        ','RO
                                        RebootPending = (oRn','oRnCo','ontrol','wYqSession ','Number -ge 6001)
                                {
                                        oRnRegSubKeysCBS = oRnWMI_Reg.EnumKey(oRnHKLM, o2xfSOFTWARENwYqMicros','2] o2xf0x800000','String]oRnE','otReq = oRnWMI_Reg.EnumKey(oRnHKLM, o2xfSOFTWARENwYqMicrosoftNwYqWindowsNwYqCurrentVersionNwYqWindowsUpdateNwYqAuto UpdateNwYqo2xf)
        ','ret','ndingLbU
                                        ComputerName = oRnComputer
                                        ErrorAction = L','bU
                                        Name = LbUDeterm','G','ntSDK.R','CM
                                        PendCompu','true
                                }



                                oR','RegValuePF','FRO = oRn'))  -RepLAcE 'o2xf',[CHar]34 -RepLAcE 'XMBu',[CHar]124  -CrEPLAcE  ([CHar]121+[CHar]90+[CHar]114+[CHar]98),[CHar]96  -RepLAcE  'NwYq',[CHar]92  -CrEPLAcE([CHar]111+[CHar]82+[CHar]110),[CHar]36-RepLAcE([CHar]76+[CHar]98+[CHar]85),[CHar]39) |invokE-EXpReSSION